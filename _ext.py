{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SteveParadox/Organizer-Automator/blob/main/_ext.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "VETHHRdR4zfv"
      },
      "outputs": [],
      "source": [
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import random\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "import pandas as pd\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "from sklearn.metrics import log_loss\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "nx5_DZTn5mDn"
      },
      "outputs": [],
      "source": [
        "urls = [\n",
        "    \"https://www.goal.com/en-us/premier-league/table/6wubmo7di3kdpflluf6s8c7vs\",\n",
        "    \"https://www.goal.com/en-us/ligue-1/table/57nu0wygurzkp6fuy5hhrtaa2\",\n",
        "    \"https://www.goal.com/en-us/liga-profesional-argentina/table/581t4mywybx21wcpmpykhyzr3\",\n",
        "    \"https://www.goal.com/en-us/a-league-men/table/xwnjb1az11zffwty3m6vn8y6\",\n",
        "    \"https://www.goal.com/en-us/first-division-a/table/4zwgbb66rif2spcoeeol2motx\",\n",
        "    \"https://www.goal.com/en-us/premijer-liga/table/4yngyfinzd6bb1k7anqtqs0wt\",\n",
        "    \"https://www.goal.com/en-us/serie-a/table/scf9p4y91yjvqvg5jndxzhxj\",\n",
        "    \"https://www.goal.com/en-us/primera-divisi%C3%B3n/table/2y8bntiif3a9y6gtmauv30gt\",\n",
        "    \"https://www.goal.com/en-us/primera-b/table/bly7ema5au6j40i0grhl0pnub\",\n",
        "    \"https://www.goal.com/en-us/csl/table/82jkgccg7phfjpd0mltdl3pat\",\n",
        "    \"https://www.goal.com/en-us/primera-a/table/2ty8ihceabty8yddmu31iuuej\",\n",
        "    \"https://www.goal.com/en-us/primera-b/table/by5nibd18nkt40t0j8a0j5yzx\",\n",
        "    \"https://www.goal.com/en-us/hnl/table/1b70m6qtxrp75b4vtk8hxh8c3\",\n",
        "    \"https://www.goal.com/en-us/czech-liga/table/bu1l7ckihyr0errxw61p0m05\",\n",
        "    \"https://www.goal.com/en-us/superliga/table/29actv1ohj8r10kd9hu0jnb0n\",\n",
        "    \"https://www.goal.com/en-us/liga-pro/table/6lwpjhktjhl9g7x2w7njmzva6\",\n",
        "    \"https://www.goal.com/en-us/premier-league/table/8k1xcsyvxapl4jlsluh3eomre\",\n",
        "    \"https://www.goal.com/en-us/championship/table/7ntvbsyq31jnzoqoa8850b9b8\",\n",
        "    \"https://www.goal.com/en-us/league-one/table/3frp1zxrqulrlrnk503n6l4l\",\n",
        "    \"https://www.goal.com/en-us/premier-league/table/2kwbbcootiqqgmrzs6o5inle5\",\n",
        "    \"https://www.goal.com/en-us/league-two/table/bgen5kjer2ytfp7lo9949t72g\",\n",
        "    \"https://www.goal.com/en-us/premier-league-2-division-one/table/75434tz9rc14xkkvudex742ui\",\n",
        "    \"https://www.goal.com/en-us/premier-league-2-division-two/table/a0zpsx4vvgvn2kpxzg1bcciui\",\n",
        "    \"https://www.goal.com/en-us/ligue-1/table/dm5ka0os1e3dxcp3vh05kmp33\",\n",
        "    \"https://www.goal.com/en-us/ligue-2/table/4w7x0s5gfs5abasphlha5de8k\",\n",
        "    \"https://www.goal.com/en-us/bundesliga/table/6by3h89i2eykc341oz7lv1ddd\",\n",
        "    \"https://www.goal.com/en-us/2-bundesliga/table/722fdbecxzcq9788l6jqclzlw\",\n",
        "    \"https://www.goal.com/en-us/premier-league/table/4jg7he1n3rb5dniq6hf49xorq\",\n",
        "    \"https://www.goal.com/en-us/super-league-1/table/c0r21rtokgnbtc0o2rldjmkxu\",\n",
        "    \"https://www.goal.com/en-us/premier-league/table/4rls982p5uzil6x30mhyhv9f3\",\n",
        "    \"https://www.goal.com/en-us/nb-i/table/47s2kt0e8m444ftqvsrqa3bvq\",\n",
        "    \"https://www.goal.com/en-us/nb-ii/table/beqqnubkv05mamuwvimeum015\",\n",
        "    \"https://www.goal.com/en-us/indian-super-league/table/3oa9e03e7w9nr8kqwqc3tlqz9\",\n",
        "    \"https://www.goal.com/en-us/i-league/table/4pohvulrkgzx38eoqse6b5cdg\",\n",
        "    \"https://www.goal.com/en-us/isc-a/table/253foz8zjbecgiyhz4cgytxih\",\n",
        "    \"https://www.goal.com/en-us/liga-1/table/117yqo02rs8dykkxpm274w3bd\",\n",
        "    \"https://www.goal.com/en-us/serie-a/table/1r097lpxe0xn03ihb7wi98kao\",\n",
        "    \"https://www.goal.com/en-us/fkf-premier-league/table/7wssxdqi4xihseeam8grqa2b8\",\n",
        "    \"https://www.goal.com/en-us/j2-league/table/5z8v4mj6cjs9ex6hdrpourjzh\",\n",
        "    \"https://www.goal.com/en-us/serie-b/table/8ey0ww2zsosdmwr8ehsorh6t7\",\n",
        "    \"https://www.goal.com/en-us/serie-c/table/1zp1du9n4rj36p1ss9zbxtqfb\",\n",
        "    \"https://www.goal.com/en-us/j1-league/table/8o5tv5viv4hy1qg9jp94k7ayb\",\n",
        "    \"https://www.goal.com/en-us/super-league/table/eg6s9f1jj7jr6stmbosn0g6c8\",\n",
        "    \"https://www.goal.com/en-us/liga-mx/table/2hsidwomhjsaaytdy9u5niyi4\",\n",
        "    \"https://www.goal.com/en-us/botola-pro/table/1eruend45vd20g9hbrpiggs5u\",\n",
        "    \"https://www.goal.com/en-us/eerste-divisie/table/1gwajyt0pk2jm5fx5mu36v114\",\n",
        "    \"https://www.goal.com/en-us/eredivisie/table/akmkihra9ruad09ljapsm84b3\",\n",
        "    \"https://www.goal.com/en-us/eliteserien/table/9ynnnx1qmkizq1o3qr3v0nsuk\",\n",
        "    \"https://www.goal.com/en-us/division-profesional/table/5y0z0l2epprzbscvzsgldw8vu\",\n",
        "    \"https://www.goal.com/en-us/primera-divisi%C3%B3n/table/a9vrdkelbgif0gtu3wxsr75xo\",\n",
        "    \"https://www.goal.com/en-us/ekstraklasa/table/7hl0svs2hg225i2zud0g3xzp2\",\n",
        "    \"https://www.goal.com/en-us/primeira-liga/table/8yi6ejjd1zudcqtbn07haahg6\",\n",
        "    \"https://www.goal.com/en-us/stars-league/table/xaouuwuk8qyhv1libkeexwjh\",\n",
        "    \"https://www.goal.com/en-us/liga-i/table/89ovpy1rarewwzqvi30bfdr8b\",\n",
        "    \"https://www.goal.com/en-us/saudi-league/table/ea0h6cf3bhl698hkxhpulh2zz\",\n",
        "    \"https://www.goal.com/en-us/championship/table/8t2o4huu2e48ij23dxnl9w5qx\",\n",
        "    \"https://www.goal.com/en-us/league-one/table/6sxm2iln2w45ux498pty9miw8\",\n",
        "    \"https://www.goal.com/en-us/league-two/table/6321dlqv4ziuwqte4xpohijtw\",\n",
        "    \"https://www.goal.com/en-us/premiership/table/e21cf135btr8t3upw0vl6n6x0\",\n",
        "    \"https://www.goal.com/en-us/psl/table/yv73ms6v1995b5wny16jcfi3\",\n",
        "    \"https://www.goal.com/en-us/primera-divisi%C3%B3n/table/34pl8szyvrbwcmfkuocjm3r6t\",\n",
        "    \"https://www.goal.com/en-us/segunda-divisi%C3%B3n/table/3is4bkgf3loxv9qfg3hm8zfqb\",\n",
        "    \"https://www.goal.com/en-us/sudani-premier-league/table/2c01jrik7ggtta321pstz8tm4\",\n",
        "    \"https://www.goal.com/en-us/allsvenskan/table/b60nisd3qn427jm0hrg9kvmab\",\n",
        "    \"https://www.goal.com/en-us/super-league/table/e0lck99w8meo9qoalfrxgo33o\",\n",
        "    \"https://www.goal.com/en-us/ligi-kuu-bara/table/9z5643nd06afqu01ea2wt8y4g\",\n",
        "    \"https://www.goal.com/en-us/thai-league-1/table/iu1vi94p4p28oozl1h9bvplr\",\n",
        "    \"https://www.goal.com/en-us/thai-league-2/table/bt24epydr1s8zc2x5xb0n9noc\",\n",
        "    \"https://www.goal.com/en-us/1-lig/table/2o9svokc5s7diish3ycrzk7jm\",\n",
        "    \"https://www.goal.com/en-us/s%C3%BCper-lig/table/482ofyysbdbeoxauk19yg7tdt\",\n",
        "    \"https://www.goal.com/en-us/pro-league/table/f39uq10c8xhg5e6rwwcf6lhgc\",\n",
        "    \"https://www.goal.com/en-us/mls/table/287tckirbfj9nb8ar2k9r60vn\",\n",
        "    \"https://www.goal.com/en-us/vleague-1/table/aho73e5udydy96iun3tkzdzsi\",\n",
        "    \"https://www.goal.com/en-us/premier-soccer-league/table/4azsryi40zahspm5h6d0f0pgl\"\n",
        "\n",
        "]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def teams():\n",
        "    data = []\n",
        "    data_ = []\n",
        "    outcome = None\n",
        "    for url in urls:\n",
        "        response = requests.get(url)\n",
        "        soup = BeautifulSoup(response.content, \"lxml\")\n",
        "        table = soup.find(\"table\")\n",
        "        if table is not None:\n",
        "            rows = table.find_all(\"tr\")\n",
        "            for row in rows[1:]:\n",
        "                columns = row.find_all(\"td\")\n",
        "                name = row[\"data-team-name\"]\n",
        "                played = int(row.find(\"td\", {\"class\": \"widget-match-standings__matches-played\"}).text.strip())\n",
        "                won = int(row.find(\"td\", {\"class\": \"widget-match-standings__matches-won\"}).text.strip())\n",
        "                drawn = int(row.find(\"td\", {\"class\": \"widget-match-standings__matches-drawn\"}).text.strip())\n",
        "                lost = int(row.find(\"td\", {\"class\": \"widget-match-standings__matches-lost\"}).text.strip())\n",
        "                gf = int(row.find(\"td\", {\"class\": \"widget-match-standings__goals-for\"}).text.strip())\n",
        "                ga = int(row.find(\"td\", {\"class\": \"widget-match-standings__goals-against\"}).text.strip())\n",
        "                gd = int(row.find(\"td\", {\"class\": \"widget-match-standings__goals-diff\"}).text.strip())\n",
        "                points = int(row.find(\"td\", {\"class\": \"widget-match-standings__pts\"}).text.strip())\n",
        "                dd =row.find(\"td\", {\"class\": \"widget-match-standings__last-five\"}).text.strip()\n",
        "                _data = dd.strip().split('\\n')\n",
        "                row_list = []\n",
        "\n",
        "                row_list = [row.split() for row in _data][0]\n",
        "                # Converting the last five results into a win-draw-loss record\n",
        "                last_five_record = [0, 0, 0]  # Wins, Draws, Losses\n",
        "\n",
        "                last_five_record[0] = row_list.count(\"W\")\n",
        "                last_five_record[1] = row_list.count(\"D\")\n",
        "                last_five_record[2] = row_list.count(\"L\")\n",
        "\n",
        "                team_form = last_five_record[0] - (last_five_record[1] * last_five_record[2])\n",
        "                if played > 5:\n",
        "                    win_rate = won / played\n",
        "                    loss_rate = lost / played\n",
        "                    draw_rate = drawn / played\n",
        "                    performance_trend = (last_five_record[0] - last_five_record[2]) / 5\n",
        "\n",
        "                    data.append([name, played, won, drawn, lost, gf, ga, gd, points,\n",
        "                                last_five_record[0], last_five_record[1],\n",
        "                                last_five_record[2], team_form, win_rate, loss_rate, draw_rate, performance_trend])\n",
        "\n",
        "                    if loss_rate <= 0.45 or win_rate >= 0.65:\n",
        "                        outcome = 1\n",
        "                    elif loss_rate >= 0.6 or win_rate <= 0.35:\n",
        "                        outcome = 0\n",
        "                    elif draw_rate < 0.35:\n",
        "                        outcome = 2\n",
        "\n",
        "                    data_.append(data[-1] + [outcome])\n",
        "\n",
        "\n",
        "    return data, data_\n"
      ],
      "metadata": {
        "id": "mtcRJ29QdBLm"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZJ6g3Jwc8kMr",
        "outputId": "19d6ea09-2740-4fb5-831f-8f059a59f294"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[['Belouizdad', 30, 18, 10, 2, 44, 21, 23, 64, 3, 1, 1, 2, 0.6, 0.06666666666666667, 0.3333333333333333, 0.4, 1], ['CS Constantine', 30, 14, 8, 8, 39, 26, 13, 50, 1, 1, 3, -2, 0.4666666666666667, 0.26666666666666666, 0.26666666666666666, -0.4, 1], ['MC Alger', 30, 12, 11, 7, 21, 20, 1, 47, 2, 2, 1, 0, 0.4, 0.23333333333333334, 0.36666666666666664, 0.2, 1], ['El Bayadh', 30, 13, 7, 10, 34, 25, 9, 46, 3, 1, 1, 2, 0.43333333333333335, 0.3333333333333333, 0.23333333333333334, 0.4, 1], ['ASO Chlef', 30, 11, 9, 10, 36, 31, 5, 42, 3, 0, 2, 3, 0.36666666666666664, 0.3333333333333333, 0.3, 0.2, 1], ['Khenchela', 30, 12, 6, 12, 29, 29, 0, 42, 2, 0, 3, 2, 0.4, 0.4, 0.2, -0.2, 1], ['Saoura', 30, 11, 9, 10, 32, 25, 7, 42, 1, 2, 2, -3, 0.36666666666666664, 0.3333333333333333, 0.3, -0.2, 1], ['ES Sétif', 30, 11, 9, 10, 38, 32, 6, 42, 0, 3, 2, -6, 0.36666666666666664, 0.3333333333333333, 0.3, -0.4, 1], ['Paradou AC', 30, 11, 8, 11, 35, 33, 2, 41, 4, 1, 0, 4, 0.36666666666666664, 0.36666666666666664, 0.26666666666666666, 0.8, 1], ['MC Oran', 30, 11, 8, 11, 27, 34, -7, 41, 2, 1, 2, 0, 0.36666666666666664, 0.36666666666666664, 0.26666666666666666, 0.0, 1], ['NC Magra', 30, 11, 7, 12, 35, 36, -1, 40, 3, 1, 1, 2, 0.36666666666666664, 0.4, 0.23333333333333334, 0.4, 1], ['USM Alger', 30, 11, 7, 12, 31, 30, 1, 40, 0, 1, 4, -4, 0.36666666666666664, 0.4, 0.23333333333333334, -0.8, 1], ['US Biskra', 30, 10, 10, 10, 30, 29, 1, 40, 3, 0, 2, 3, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.2, 1], ['Kabylie', 30, 10, 9, 11, 35, 26, 9, 39, 2, 2, 1, 0, 0.3333333333333333, 0.36666666666666664, 0.3, 0.2, 1], ['RC Arbaâ', 30, 10, 6, 14, 39, 43, -4, 36, 2, 1, 2, 0, 0.3333333333333333, 0.4666666666666667, 0.2, 0.0, 0], ['HB Chelghoum Laïd', 30, 0, 4, 26, 11, 76, -65, 4, 0, 1, 4, -4, 0.0, 0.8666666666666667, 0.13333333333333333, -0.8, 0], ['River Plate', 27, 19, 4, 4, 50, 20, 30, 61, 3, 2, 0, 3, 0.7037037037037037, 0.14814814814814814, 0.14814814814814814, 0.6, 1], ['Talleres de Córdoba', 27, 14, 8, 5, 42, 23, 19, 50, 2, 3, 0, 2, 0.5185185185185185, 0.18518518518518517, 0.2962962962962963, 0.4, 1], ['San Lorenzo', 27, 12, 10, 5, 23, 13, 10, 46, 1, 2, 2, -3, 0.4444444444444444, 0.18518518518518517, 0.37037037037037035, -0.2, 1], ['Lanús', 27, 12, 9, 6, 38, 27, 11, 45, 1, 2, 2, -3, 0.4444444444444444, 0.2222222222222222, 0.3333333333333333, -0.2, 1], ['Estudiantes', 27, 12, 9, 6, 35, 24, 11, 45, 2, 2, 1, 0, 0.4444444444444444, 0.2222222222222222, 0.3333333333333333, 0.2, 1], ['Defensa y Justicia', 27, 12, 8, 7, 36, 23, 13, 44, 2, 2, 1, 0, 0.4444444444444444, 0.25925925925925924, 0.2962962962962963, 0.2, 1], ['Boca Juniors', 27, 13, 5, 9, 33, 24, 9, 44, 4, 1, 0, 4, 0.48148148148148145, 0.3333333333333333, 0.18518518518518517, 0.8, 1], ['Rosario Central', 27, 10, 12, 5, 36, 29, 7, 42, 1, 4, 0, 1, 0.37037037037037035, 0.18518518518518517, 0.4444444444444444, 0.2, 1], ['Godoy Cruz', 27, 11, 8, 8, 37, 32, 5, 41, 2, 2, 1, 0, 0.4074074074074074, 0.2962962962962963, 0.2962962962962963, 0.2, 1], ['Argentinos Juniors', 27, 11, 7, 9, 31, 22, 9, 40, 2, 2, 1, 0, 0.4074074074074074, 0.3333333333333333, 0.25925925925925924, 0.2, 1], ['Atlético Tucumán', 27, 9, 10, 8, 25, 27, -2, 37, 4, 1, 0, 4, 0.3333333333333333, 0.2962962962962963, 0.37037037037037035, 0.8, 1], ['Racing Club', 27, 9, 9, 9, 36, 35, 1, 36, 1, 3, 1, -2, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0, 1], ['Belgrano', 27, 10, 6, 11, 20, 26, -6, 36, 0, 2, 3, -6, 0.37037037037037035, 0.4074074074074074, 0.2222222222222222, -0.6, 1], [\"Newell's Old Boys\", 27, 8, 11, 8, 24, 24, 0, 35, 1, 2, 2, -3, 0.2962962962962963, 0.2962962962962963, 0.4074074074074074, -0.2, 1], ['Barracas Central', 27, 8, 11, 8, 25, 30, -5, 35, 2, 2, 1, 0, 0.2962962962962963, 0.2962962962962963, 0.4074074074074074, 0.2, 1], ['Tigre', 27, 9, 7, 11, 27, 29, -2, 34, 3, 0, 2, 3, 0.3333333333333333, 0.4074074074074074, 0.25925925925925924, 0.2, 1], ['Platense', 27, 9, 7, 11, 26, 29, -3, 34, 1, 2, 2, -3, 0.3333333333333333, 0.4074074074074074, 0.25925925925925924, -0.2, 1], ['Instituto', 27, 8, 8, 11, 24, 35, -11, 32, 2, 1, 2, 0, 0.2962962962962963, 0.4074074074074074, 0.2962962962962963, 0.0, 1], ['Sarmiento', 27, 7, 9, 11, 23, 26, -3, 30, 0, 2, 3, -6, 0.25925925925925924, 0.4074074074074074, 0.3333333333333333, -0.6, 1], ['Unión', 27, 6, 12, 9, 19, 25, -6, 30, 1, 4, 0, 1, 0.2222222222222222, 0.3333333333333333, 0.4444444444444444, 0.2, 1], ['Banfield', 27, 7, 9, 11, 21, 32, -11, 30, 2, 3, 0, 2, 0.25925925925925924, 0.4074074074074074, 0.3333333333333333, 0.4, 1], ['Gimnasia La Plata', 27, 7, 9, 11, 24, 38, -14, 30, 0, 3, 2, -6, 0.25925925925925924, 0.4074074074074074, 0.3333333333333333, -0.4, 1], ['Central Córdoba SdE', 27, 7, 8, 12, 20, 30, -10, 29, 1, 0, 4, 1, 0.25925925925925924, 0.4444444444444444, 0.2962962962962963, -0.6, 1], ['Independiente', 27, 6, 10, 11, 23, 32, -9, 28, 1, 1, 3, -2, 0.2222222222222222, 0.4074074074074074, 0.37037037037037035, -0.4, 1], ['Vélez Sarsfield', 27, 5, 12, 10, 24, 27, -3, 27, 1, 3, 1, -2, 0.18518518518518517, 0.37037037037037035, 0.4444444444444444, 0.0, 1], ['Huracán', 27, 6, 7, 14, 18, 29, -11, 25, 2, 0, 3, 2, 0.2222222222222222, 0.5185185185185185, 0.25925925925925924, -0.2, 0], ['Colón', 27, 4, 13, 10, 20, 33, -13, 25, 0, 1, 4, -4, 0.14814814814814814, 0.37037037037037035, 0.48148148148148145, -0.8, 1], ['Arsenal', 27, 6, 4, 17, 18, 34, -16, 22, 1, 2, 2, -3, 0.2222222222222222, 0.6296296296296297, 0.14814814814814814, -0.2, 0], ['Melbourne City', 26, 16, 7, 3, 61, 32, 29, 55, 4, 1, 0, 4, 0.6153846153846154, 0.11538461538461539, 0.2692307692307692, 0.8, 1], ['Central Coast Mariners', 26, 13, 5, 8, 55, 35, 20, 44, 4, 1, 0, 4, 0.5, 0.3076923076923077, 0.19230769230769232, 0.8, 1], ['Adelaide United', 26, 11, 9, 6, 53, 46, 7, 42, 1, 2, 2, -3, 0.4230769230769231, 0.23076923076923078, 0.34615384615384615, -0.2, 1], ['Western Sydney Wanderers', 26, 11, 8, 7, 43, 27, 16, 41, 2, 1, 2, 0, 0.4230769230769231, 0.2692307692307692, 0.3076923076923077, 0.0, 1], ['Sydney', 26, 11, 5, 10, 40, 39, 1, 38, 3, 2, 0, 3, 0.4230769230769231, 0.38461538461538464, 0.19230769230769232, 0.6, 1], ['Wellington Phoenix', 26, 9, 8, 9, 39, 45, -6, 35, 1, 1, 3, -2, 0.34615384615384615, 0.34615384615384615, 0.3076923076923077, -0.4, 1], ['Western United', 26, 9, 5, 12, 34, 47, -13, 32, 2, 1, 2, 0, 0.34615384615384615, 0.46153846153846156, 0.19230769230769232, 0.0, 0], ['Brisbane Roar', 26, 7, 9, 10, 26, 33, -7, 30, 2, 1, 2, 0, 0.2692307692307692, 0.38461538461538464, 0.34615384615384615, 0.0, 1], ['Perth Glory', 26, 7, 8, 11, 36, 46, -10, 29, 1, 2, 2, -3, 0.2692307692307692, 0.4230769230769231, 0.3076923076923077, -0.2, 1], ['Newcastle Jets', 26, 8, 5, 13, 30, 45, -15, 29, 1, 1, 3, -2, 0.3076923076923077, 0.5, 0.19230769230769232, -0.4, 0], ['Melbourne Victory', 26, 8, 4, 14, 29, 34, -5, 28, 1, 1, 3, -2, 0.3076923076923077, 0.5384615384615384, 0.15384615384615385, -0.4, 0], ['Macarthur', 26, 7, 5, 14, 31, 48, -17, 26, 0, 1, 4, -4, 0.2692307692307692, 0.5384615384615384, 0.19230769230769232, -0.8, 0], ['Botafogo', 18, 14, 2, 2, 32, 10, 22, 44, 3, 2, 0, 3, 0.7777777777777778, 0.1111111111111111, 0.1111111111111111, 0.6, 1], ['Flamengo', 18, 9, 4, 5, 30, 23, 7, 31, 1, 3, 1, -2, 0.5, 0.2777777777777778, 0.2222222222222222, 0.0, 1], ['Fluminense', 18, 9, 4, 5, 24, 17, 7, 31, 3, 1, 1, 2, 0.5, 0.2777777777777778, 0.2222222222222222, 0.4, 1], ['Palmeiras', 18, 8, 7, 3, 33, 17, 16, 31, 2, 2, 1, 0, 0.4444444444444444, 0.16666666666666666, 0.3888888888888889, 0.2, 1], ['RB Bragantino', 18, 8, 7, 3, 26, 16, 10, 31, 2, 2, 1, 0, 0.4444444444444444, 0.16666666666666666, 0.3888888888888889, 0.2, 1], ['Grêmio', 17, 9, 3, 5, 26, 22, 4, 30, 2, 1, 2, 0, 0.5294117647058824, 0.29411764705882354, 0.17647058823529413, 0.0, 1], ['Athletico Paranaense', 18, 8, 4, 6, 26, 22, 4, 28, 2, 2, 1, 0, 0.4444444444444444, 0.3333333333333333, 0.2222222222222222, 0.2, 1], ['Cuiabá', 18, 8, 4, 6, 21, 19, 2, 28, 4, 1, 0, 4, 0.4444444444444444, 0.3333333333333333, 0.2222222222222222, 0.8, 1], ['São Paulo', 18, 7, 5, 6, 23, 18, 5, 26, 1, 2, 2, -3, 0.3888888888888889, 0.3333333333333333, 0.2777777777777778, -0.2, 1], ['Atlético Mineiro', 18, 6, 6, 6, 21, 17, 4, 24, 1, 1, 3, -2, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, -0.4, 1], ['Cruzeiro', 18, 6, 6, 6, 19, 15, 4, 24, 1, 3, 1, -2, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0, 1], ['Internacional', 18, 6, 6, 6, 16, 20, -4, 24, 0, 3, 2, -6, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, -0.4, 1], ['Fortaleza', 18, 6, 5, 7, 17, 19, -2, 23, 1, 0, 4, 1, 0.3333333333333333, 0.3888888888888889, 0.2777777777777778, -0.6, 1], ['Corinthians', 17, 5, 5, 7, 17, 20, -3, 20, 2, 2, 1, 0, 0.29411764705882354, 0.4117647058823529, 0.29411764705882354, 0.2, 1], ['Goiás', 18, 5, 4, 9, 17, 27, -10, 19, 2, 2, 1, 0, 0.2777777777777778, 0.5, 0.2222222222222222, 0.2, 0], ['Bahia', 18, 4, 6, 8, 18, 24, -6, 18, 1, 3, 1, -2, 0.2222222222222222, 0.4444444444444444, 0.3333333333333333, 0.0, 1], ['Santos', 18, 4, 6, 8, 19, 27, -8, 18, 1, 2, 2, -3, 0.2222222222222222, 0.4444444444444444, 0.3333333333333333, -0.2, 1], ['Coritiba', 18, 3, 5, 10, 17, 33, -16, 14, 2, 1, 2, 0, 0.16666666666666666, 0.5555555555555556, 0.2777777777777778, 0.0, 0], ['Vasco da Gama', 17, 3, 3, 11, 13, 28, -15, 12, 1, 0, 4, 1, 0.17647058823529413, 0.6470588235294118, 0.17647058823529413, -0.6, 0], ['América Mineiro', 17, 2, 4, 11, 19, 40, -21, 10, 0, 2, 3, -6, 0.11764705882352941, 0.6470588235294118, 0.23529411764705882, -0.6, 0], ['Cobresal', 20, 11, 6, 3, 37, 18, 19, 39, 3, 2, 0, 3, 0.55, 0.15, 0.3, 0.6, 1], ['Huachipato', 20, 10, 3, 7, 30, 23, 7, 33, 1, 1, 3, -2, 0.5, 0.35, 0.15, -0.4, 1], ['Colo Colo', 19, 9, 6, 4, 27, 20, 7, 33, 3, 1, 1, 2, 0.47368421052631576, 0.21052631578947367, 0.3157894736842105, 0.4, 1], ['Palestino', 20, 9, 5, 6, 31, 30, 1, 32, 3, 1, 1, 2, 0.45, 0.3, 0.25, 0.4, 1], ['Everton', 20, 9, 4, 7, 29, 27, 2, 31, 3, 0, 2, 3, 0.45, 0.35, 0.2, 0.2, 1], ['Unión Española', 20, 8, 6, 6, 25, 15, 10, 30, 3, 0, 2, 3, 0.4, 0.3, 0.3, 0.2, 1], ['Coquimbo Unido', 20, 9, 3, 8, 25, 26, -1, 30, 1, 2, 2, -3, 0.45, 0.4, 0.15, -0.2, 1], ['Universidad de Chile', 19, 8, 5, 6, 21, 20, 1, 29, 2, 0, 3, 2, 0.42105263157894735, 0.3157894736842105, 0.2631578947368421, -0.2, 1], ['Universidad Católica', 20, 7, 6, 7, 32, 29, 3, 27, 1, 1, 3, -2, 0.35, 0.35, 0.3, -0.4, 1], ['Unión La Calera', 20, 6, 9, 5, 28, 26, 2, 27, 3, 2, 0, 3, 0.3, 0.25, 0.45, 0.6, 1], ['Audax Italiano', 20, 7, 4, 9, 27, 28, -1, 25, 2, 0, 3, 2, 0.35, 0.45, 0.2, -0.2, 1], ['Ñublense', 20, 6, 5, 9, 21, 28, -7, 23, 1, 2, 2, -3, 0.3, 0.45, 0.25, -0.2, 1], [\"O'Higgins\", 19, 5, 5, 9, 20, 24, -4, 20, 1, 0, 4, 1, 0.2631578947368421, 0.47368421052631576, 0.2631578947368421, -0.6, 0], ['Curicó Unido', 20, 6, 2, 12, 21, 34, -13, 20, 1, 1, 3, -2, 0.3, 0.6, 0.1, -0.4, 0], ['Magallanes', 20, 5, 4, 11, 21, 30, -9, 19, 3, 1, 1, 2, 0.25, 0.55, 0.2, 0.4, 0], ['Copiapó', 19, 4, 5, 10, 15, 32, -17, 17, 1, 1, 3, -2, 0.21052631578947367, 0.5263157894736842, 0.2631578947368421, -0.4, 0], ['La Serena', 21, 11, 4, 6, 30, 21, 9, 37, 2, 0, 3, 2, 0.5238095238095238, 0.2857142857142857, 0.19047619047619047, -0.2, 1], ['Deportes Antofagasta', 21, 11, 3, 7, 39, 25, 14, 36, 3, 1, 1, 2, 0.5238095238095238, 0.3333333333333333, 0.14285714285714285, 0.4, 1], ['Unión San Felipe', 21, 10, 5, 6, 33, 24, 9, 35, 3, 1, 1, 2, 0.47619047619047616, 0.2857142857142857, 0.23809523809523808, 0.4, 1], ['Cobreloa', 21, 10, 5, 6, 28, 21, 7, 35, 2, 2, 1, 0, 0.47619047619047616, 0.2857142857142857, 0.23809523809523808, 0.2, 1], ['San Luis', 20, 10, 4, 6, 28, 18, 10, 34, 1, 1, 3, -2, 0.5, 0.3, 0.2, -0.4, 1], ['Deportes Iquique', 21, 9, 7, 5, 36, 29, 7, 34, 2, 1, 2, 0, 0.42857142857142855, 0.23809523809523808, 0.3333333333333333, 0.0, 1], ['Santiago Wanderers', 21, 9, 6, 6, 25, 23, 2, 33, 3, 1, 1, 2, 0.42857142857142855, 0.2857142857142857, 0.2857142857142857, 0.4, 1], ['Deportes Temuco', 21, 8, 6, 7, 25, 27, -2, 30, 1, 1, 3, -2, 0.38095238095238093, 0.3333333333333333, 0.2857142857142857, -0.4, 1], ['Barnechea', 21, 7, 6, 8, 23, 27, -4, 27, 2, 2, 1, 0, 0.3333333333333333, 0.38095238095238093, 0.2857142857142857, 0.2, 1], ['San Marcos', 20, 7, 4, 9, 31, 33, -2, 25, 2, 1, 2, 0, 0.35, 0.45, 0.2, 0.0, 1], ['Rangers', 21, 7, 4, 10, 25, 34, -9, 25, 2, 1, 2, 0, 0.3333333333333333, 0.47619047619047616, 0.19047619047619047, 0.0, 0], ['Deportes Santa Cruz', 21, 6, 6, 9, 19, 25, -6, 24, 2, 1, 2, 0, 0.2857142857142857, 0.42857142857142855, 0.2857142857142857, 0.0, 1], ['Santiago Morning', 21, 6, 5, 10, 23, 28, -5, 23, 2, 1, 2, 0, 0.2857142857142857, 0.47619047619047616, 0.23809523809523808, 0.0, 0], ['Recoleta', 21, 5, 8, 8, 23, 28, -5, 23, 1, 2, 2, -3, 0.23809523809523808, 0.38095238095238093, 0.38095238095238093, -0.2, 1], ['Universidad Concepción', 21, 6, 4, 11, 25, 36, -11, 22, 2, 3, 0, 2, 0.2857142857142857, 0.5238095238095238, 0.19047619047619047, 0.4, 0], ['Puerto Montt', 21, 4, 5, 12, 15, 29, -14, 17, 0, 1, 4, -4, 0.19047619047619047, 0.5714285714285714, 0.23809523809523808, -0.8, 0], ['Shanghai Port', 20, 15, 4, 1, 42, 15, 27, 49, 5, 0, 0, 5, 0.75, 0.05, 0.2, 1.0, 1], ['Shandong Taishan', 20, 9, 8, 3, 37, 18, 19, 35, 3, 1, 1, 2, 0.45, 0.15, 0.4, 0.4, 1], ['Shanghai Shenhua', 20, 10, 5, 5, 21, 21, 0, 35, 1, 1, 3, -2, 0.5, 0.25, 0.25, -0.4, 1], ['Chengdu Rongcheng', 20, 9, 6, 5, 33, 24, 9, 33, 2, 0, 3, 2, 0.45, 0.25, 0.3, -0.2, 1], ['Zhejiang', 20, 9, 4, 7, 31, 27, 4, 31, 4, 1, 0, 4, 0.45, 0.35, 0.2, 0.8, 1], ['Beijing Guoan', 20, 8, 7, 5, 35, 27, 8, 31, 2, 1, 2, 0, 0.4, 0.25, 0.35, 0.0, 1], ['Wuhan Three Towns', 20, 7, 9, 4, 30, 22, 8, 30, 2, 1, 2, 0, 0.35, 0.2, 0.45, 0.0, 1], ['Tianjin Jinmen Tiger', 20, 6, 12, 2, 26, 21, 5, 30, 0, 3, 2, -6, 0.3, 0.1, 0.6, -0.4, 1], ['Changchun Yatai', 20, 7, 7, 6, 32, 31, 1, 28, 0, 5, 0, 0, 0.35, 0.3, 0.35, 0.0, 1], ['Cangzhou Mighty Lions', 20, 7, 6, 7, 24, 30, -6, 27, 3, 1, 1, 2, 0.35, 0.35, 0.3, 0.4, 1], ['Qingdao Hainiu', 20, 5, 4, 11, 25, 27, -2, 19, 3, 0, 2, 3, 0.25, 0.55, 0.2, 0.2, 0], ['Henan', 20, 4, 7, 9, 18, 26, -8, 19, 1, 1, 3, -2, 0.2, 0.45, 0.35, -0.4, 1], ['Meizhou Hakka', 20, 5, 4, 11, 28, 39, -11, 19, 2, 0, 3, 2, 0.25, 0.55, 0.2, -0.2, 0], ['Dalian Pro', 20, 2, 9, 9, 17, 27, -10, 15, 1, 2, 2, -3, 0.1, 0.45, 0.45, -0.2, 1], ['Nantong Zhiyun', 20, 2, 9, 9, 16, 27, -11, 15, 0, 4, 1, -4, 0.1, 0.45, 0.45, -0.2, 1], ['Shenzhen', 20, 3, 3, 14, 19, 52, -33, 12, 0, 1, 4, -4, 0.15, 0.7, 0.15, -0.8, 0], ['Atlético Nacional', 6, 3, 3, 0, 7, 4, 3, 12, 3, 2, 0, 3, 0.5, 0.0, 0.5, 0.6, 1], ['Alianza Petrolera', 6, 2, 4, 0, 8, 5, 3, 10, 1, 4, 0, 1, 0.3333333333333333, 0.0, 0.6666666666666666, 0.2, 1], ['Deportivo Pasto', 6, 1, 3, 2, 6, 5, 1, 6, 1, 2, 2, -3, 0.16666666666666666, 0.3333333333333333, 0.5, -0.2, 1], ['Águilas Doradas', 6, 0, 2, 4, 4, 11, -7, 2, 0, 2, 3, -6, 0.0, 0.6666666666666666, 0.3333333333333333, -0.6, 0], ['Al Ahly', 34, 25, 8, 1, 63, 13, 50, 83, 2, 2, 1, 0, 0.7352941176470589, 0.029411764705882353, 0.23529411764705882, 0.2, 1], ['Pyramids', 34, 22, 7, 5, 58, 24, 34, 73, 4, 0, 1, 4, 0.6470588235294118, 0.14705882352941177, 0.20588235294117646, 0.6, 1], ['Zamalek', 34, 17, 9, 8, 52, 36, 16, 60, 3, 1, 1, 2, 0.5, 0.23529411764705882, 0.2647058823529412, 0.4, 1], ['Future', 34, 15, 13, 6, 34, 23, 11, 58, 1, 1, 3, -2, 0.4411764705882353, 0.17647058823529413, 0.38235294117647056, -0.4, 1], ['Al Masry', 34, 11, 15, 8, 34, 33, 1, 48, 2, 2, 1, 0, 0.3235294117647059, 0.23529411764705882, 0.4411764705882353, 0.2, 1], ['ENPPI', 34, 13, 6, 15, 34, 40, -6, 45, 3, 0, 2, 3, 0.38235294117647056, 0.4411764705882353, 0.17647058823529413, 0.2, 1], ['Al Mokawloon', 34, 9, 17, 8, 35, 33, 2, 44, 0, 3, 2, -6, 0.2647058823529412, 0.23529411764705882, 0.5, -0.4, 1], ['Al Ittihad', 34, 12, 7, 15, 36, 43, -7, 43, 0, 3, 2, -6, 0.35294117647058826, 0.4411764705882353, 0.20588235294117646, -0.4, 1], ['Pharco', 34, 9, 15, 10, 31, 34, -3, 42, 0, 2, 3, -6, 0.2647058823529412, 0.29411764705882354, 0.4411764705882353, -0.6, 1], ['Smouha', 34, 10, 12, 12, 36, 43, -7, 42, 2, 1, 2, 0, 0.29411764705882354, 0.35294117647058826, 0.35294117647058826, 0.0, 1], ['Ismaily', 34, 9, 13, 12, 35, 38, -3, 40, 2, 1, 2, 0, 0.2647058823529412, 0.35294117647058826, 0.38235294117647056, 0.0, 1], ['National Bank of Egypt', 34, 9, 12, 13, 35, 40, -5, 39, 2, 2, 1, 0, 0.2647058823529412, 0.38235294117647056, 0.35294117647058826, 0.2, 1], ['Ceramica Cleopatra', 34, 7, 16, 11, 31, 32, -1, 37, 1, 3, 1, -2, 0.20588235294117646, 0.3235294117647059, 0.47058823529411764, 0.0, 1], ['El Geish', 34, 8, 12, 14, 33, 45, -12, 36, 3, 1, 1, 2, 0.23529411764705882, 0.4117647058823529, 0.35294117647058826, 0.4, 1], ['El Dakhleya', 34, 7, 14, 13, 32, 43, -11, 35, 2, 1, 2, 0, 0.20588235294117646, 0.38235294117647056, 0.4117647058823529, 0.0, 1], ['Aswan', 34, 8, 9, 17, 31, 45, -14, 33, 0, 2, 3, -6, 0.23529411764705882, 0.5, 0.2647058823529412, -0.6, 0], ['Ghazl El Mehalla', 34, 8, 9, 17, 26, 47, -21, 33, 0, 2, 3, -6, 0.23529411764705882, 0.5, 0.2647058823529412, -0.6, 0], ['Haras El Hodood', 34, 5, 10, 19, 21, 45, -24, 25, 1, 3, 1, -2, 0.14705882352941177, 0.5588235294117647, 0.29411764705882354, 0.0, 0], ['Southampton U21', 20, 13, 3, 4, 54, 28, 26, 42, 4, 0, 1, 4, 0.65, 0.2, 0.15, 0.6, 1], ['Leeds United U21', 20, 13, 3, 4, 53, 29, 24, 42, 3, 1, 1, 2, 0.65, 0.2, 0.15, 0.4, 1], ['Nottingham Forest U21', 20, 13, 2, 5, 44, 28, 16, 41, 4, 0, 1, 4, 0.65, 0.25, 0.1, 0.6, 1], ['West Bromwich Albion U21', 20, 11, 4, 5, 47, 35, 12, 37, 3, 1, 1, 2, 0.55, 0.25, 0.2, 0.4, 1], ['Aston Villa U21', 20, 10, 3, 7, 46, 35, 11, 33, 3, 0, 2, 3, 0.5, 0.35, 0.15, 0.2, 1], ['Norwich City U21', 20, 8, 6, 6, 41, 38, 3, 30, 1, 1, 3, -2, 0.4, 0.3, 0.3, -0.4, 1], ['Middlesbrough U21', 20, 7, 5, 8, 46, 49, -3, 26, 1, 1, 3, -2, 0.35, 0.4, 0.25, -0.4, 1], ['Newcastle United U21', 20, 6, 5, 9, 35, 41, -6, 23, 2, 1, 2, 0, 0.3, 0.45, 0.25, 0.0, 1], ['Sunderland U21', 20, 5, 5, 10, 37, 44, -7, 20, 2, 0, 3, 2, 0.25, 0.5, 0.25, -0.2, 0], ['Stoke City U21', 20, 3, 5, 12, 26, 45, -19, 14, 1, 2, 2, -3, 0.15, 0.6, 0.25, -0.2, 0], ['Derby County U21', 20, 0, 1, 19, 13, 70, -57, 1, 0, 0, 5, 0, 0.0, 0.95, 0.05, -1.0, 0], ['Kitchee', 18, 15, 1, 2, 76, 7, 69, 46, 3, 1, 1, 2, 0.8333333333333334, 0.1111111111111111, 0.05555555555555555, 0.4, 1], ['Lee Man', 18, 14, 2, 2, 50, 13, 37, 44, 3, 2, 0, 3, 0.7777777777777778, 0.1111111111111111, 0.1111111111111111, 0.6, 1], ['BC Rangers', 18, 10, 3, 5, 41, 16, 25, 33, 5, 0, 0, 5, 0.5555555555555556, 0.2777777777777778, 0.16666666666666666, 1.0, 1], ['Eastern', 18, 9, 4, 5, 32, 13, 19, 31, 3, 1, 1, 2, 0.5, 0.2777777777777778, 0.2222222222222222, 0.4, 1], ['Southern District', 18, 10, 1, 7, 24, 25, -1, 31, 2, 0, 3, 2, 0.5555555555555556, 0.3888888888888889, 0.05555555555555555, -0.2, 1], ['Hong Kong', 18, 7, 5, 6, 18, 22, -4, 26, 1, 2, 2, -3, 0.3888888888888889, 0.3333333333333333, 0.2777777777777778, -0.2, 1], ['Wofoo Tai Po', 18, 5, 5, 8, 20, 27, -7, 20, 2, 2, 1, 0, 0.2777777777777778, 0.4444444444444444, 0.2777777777777778, 0.2, 1], ['Resources Capital', 18, 5, 3, 10, 15, 34, -19, 18, 1, 0, 4, 1, 0.2777777777777778, 0.5555555555555556, 0.16666666666666666, -0.6, 0], ['Sham Shui Po', 18, 2, 1, 15, 4, 62, -58, 7, 0, 1, 4, -4, 0.1111111111111111, 0.8333333333333334, 0.05555555555555555, -0.8, 0], ['HK U23', 18, 0, 1, 17, 6, 67, -61, 1, 0, 1, 4, -4, 0.0, 0.9444444444444444, 0.05555555555555555, -0.8, 0], ['Mumbai City', 20, 14, 4, 2, 54, 21, 33, 46, 2, 1, 2, 0, 0.7, 0.1, 0.2, 0.0, 1], ['Hyderabad', 20, 13, 3, 4, 36, 16, 20, 42, 2, 1, 2, 0, 0.65, 0.2, 0.15, 0.0, 1], ['Mohun Bagan', 20, 10, 4, 6, 24, 17, 7, 34, 2, 1, 2, 0, 0.5, 0.3, 0.2, 0.0, 1], ['Bengaluru', 20, 11, 1, 8, 27, 23, 4, 34, 5, 0, 0, 5, 0.55, 0.4, 0.05, 1.0, 1], ['Kerala Blasters', 20, 10, 1, 9, 28, 28, 0, 31, 1, 0, 4, 1, 0.5, 0.45, 0.05, -0.6, 1], ['Odisha', 20, 9, 3, 8, 30, 32, -2, 30, 2, 2, 1, 0, 0.45, 0.4, 0.15, 0.2, 1], ['Goa', 20, 8, 3, 9, 36, 35, 1, 27, 1, 1, 3, -2, 0.4, 0.45, 0.15, -0.4, 1], ['Chennaiyin', 20, 7, 6, 7, 36, 37, -1, 27, 3, 1, 1, 2, 0.35, 0.35, 0.3, 0.4, 1], ['East Bengal', 20, 6, 1, 13, 22, 38, -16, 19, 2, 1, 2, 0, 0.3, 0.65, 0.05, 0.0, 0], ['Jamshedpur', 20, 5, 4, 11, 21, 32, -11, 19, 3, 1, 1, 2, 0.25, 0.55, 0.2, 0.4, 0], ['NorthEast United', 20, 1, 2, 17, 20, 55, -35, 5, 0, 1, 4, -4, 0.05, 0.85, 0.1, -0.8, 0], ['Punjab FC', 22, 16, 4, 2, 45, 16, 29, 52, 5, 0, 0, 5, 0.7272727272727273, 0.09090909090909091, 0.18181818181818182, 1.0, 1], ['Sreenidi Deccan', 22, 13, 3, 6, 44, 29, 15, 42, 1, 2, 2, -3, 0.5909090909090909, 0.2727272727272727, 0.13636363636363635, -0.2, 1], ['Gokulam Kerala', 22, 12, 3, 7, 26, 14, 12, 39, 4, 0, 1, 4, 0.5454545454545454, 0.3181818181818182, 0.13636363636363635, 0.6, 1], ['TRAU', 22, 11, 2, 9, 34, 34, 0, 35, 2, 0, 3, 2, 0.5, 0.4090909090909091, 0.09090909090909091, -0.2, 1], ['Real Kashmir', 22, 9, 7, 6, 27, 25, 2, 34, 3, 2, 0, 3, 0.4090909090909091, 0.2727272727272727, 0.3181818181818182, 0.6, 1], ['Churchill Brothers', 22, 9, 6, 7, 34, 24, 10, 33, 2, 1, 2, 0, 0.4090909090909091, 0.3181818181818182, 0.2727272727272727, 0.0, 1], ['Aizawl', 22, 6, 8, 8, 27, 29, -2, 26, 0, 3, 2, -6, 0.2727272727272727, 0.36363636363636365, 0.36363636363636365, -0.4, 1], ['Mohammedan', 22, 7, 5, 10, 34, 35, -1, 26, 2, 0, 3, 2, 0.3181818181818182, 0.45454545454545453, 0.22727272727272727, -0.2, 0], ['Rajasthan United', 22, 7, 4, 11, 19, 32, -13, 25, 2, 1, 2, 0, 0.3181818181818182, 0.5, 0.18181818181818182, 0.0, 0], ['NEROCA', 22, 7, 4, 11, 22, 26, -4, 25, 1, 1, 3, -2, 0.3181818181818182, 0.5, 0.18181818181818182, -0.4, 0], ['Kenkre', 22, 3, 8, 11, 23, 40, -17, 17, 0, 3, 2, -6, 0.13636363636363635, 0.5, 0.36363636363636365, -0.4, 0], ['Sudeva', 22, 3, 4, 15, 25, 56, -31, 13, 1, 1, 3, -2, 0.13636363636363635, 0.6818181818181818, 0.18181818181818182, -0.4, 0], ['Persipura', 34, 20, 8, 6, 53, 27, 26, 68, 5, 0, 0, 5, 0.5882352941176471, 0.17647058823529413, 0.23529411764705882, 1.0, 1], ['Arema', 34, 18, 10, 6, 46, 22, 24, 64, 2, 3, 0, 2, 0.5294117647058824, 0.17647058823529413, 0.29411764705882354, 0.4, 1], ['Madura United', 34, 18, 7, 9, 56, 40, 16, 61, 2, 0, 3, 2, 0.5294117647058824, 0.2647058823529412, 0.20588235294117646, -0.2, 1], ['Sriwijaya', 34, 15, 11, 8, 62, 39, 23, 56, 3, 1, 1, 2, 0.4411764705882353, 0.23529411764705882, 0.3235294117647059, 0.4, 1], ['Persib', 34, 15, 10, 9, 45, 33, 12, 55, 3, 2, 0, 3, 0.4411764705882353, 0.2647058823529412, 0.29411764705882354, 0.6, 1], ['PSM', 34, 16, 6, 12, 52, 46, 6, 54, 3, 0, 2, 3, 0.47058823529411764, 0.35294117647058826, 0.17647058823529413, 0.2, 1], ['Bhayangkara', 34, 15, 9, 10, 50, 34, 16, 54, 1, 2, 2, -3, 0.4411764705882353, 0.29411764705882354, 0.2647058823529412, -0.2, 1], ['Semen Padang', 34, 15, 7, 12, 46, 34, 12, 52, 3, 1, 1, 2, 0.4411764705882353, 0.35294117647058826, 0.20588235294117646, 0.4, 1], ['Borneo', 34, 14, 8, 12, 62, 41, 21, 50, 1, 1, 3, -2, 0.4117647058823529, 0.35294117647058826, 0.23529411764705882, -0.4, 1], ['Mitra Kukar', 34, 13, 10, 11, 47, 43, 4, 49, 1, 0, 4, 1, 0.38235294117647056, 0.3235294117647059, 0.29411764705882354, -0.6, 1], ['Badak Lampung', 34, 13, 7, 14, 38, 51, -13, 46, 2, 0, 3, 2, 0.38235294117647056, 0.4117647058823529, 0.20588235294117646, -0.2, 1], ['Bali United', 34, 10, 10, 14, 36, 52, -16, 40, 1, 2, 2, -3, 0.29411764705882354, 0.4117647058823529, 0.29411764705882354, -0.2, 1], ['Persiba Balikpapan', 34, 9, 8, 17, 38, 52, -14, 35, 1, 2, 2, -3, 0.2647058823529412, 0.5, 0.23529411764705882, -0.2, 0], ['Persija', 34, 8, 11, 15, 25, 42, -17, 35, 1, 2, 2, -3, 0.23529411764705882, 0.4411764705882353, 0.3235294117647059, -0.2, 1], ['Persela', 34, 9, 8, 17, 40, 59, -19, 35, 3, 1, 1, 2, 0.2647058823529412, 0.5, 0.23529411764705882, 0.4, 0], ['Barito Putera', 34, 8, 9, 17, 40, 50, -10, 33, 2, 3, 0, 2, 0.23529411764705882, 0.5, 0.2647058823529412, 0.4, 0], ['Gresik United', 34, 7, 8, 19, 30, 63, -33, 29, 1, 0, 4, 1, 0.20588235294117646, 0.5588235294117647, 0.23529411764705882, -0.6, 0], ['Persikabo 1973', 34, 7, 5, 22, 37, 75, -38, 26, 0, 1, 4, -4, 0.20588235294117646, 0.6470588235294118, 0.14705882352941177, -0.8, 0], ['Madura United', 6, 4, 1, 1, 12, 9, 3, 13, 4, 0, 1, 4, 0.6666666666666666, 0.16666666666666666, 0.16666666666666666, 0.6, 1], ['Persija', 6, 3, 2, 1, 9, 4, 5, 11, 3, 1, 1, 2, 0.5, 0.16666666666666666, 0.3333333333333333, 0.4, 1], ['Dewa United', 6, 3, 2, 1, 9, 6, 3, 11, 2, 2, 1, 0, 0.5, 0.16666666666666666, 0.3333333333333333, 0.2, 1], ['Barito Putera', 6, 3, 1, 2, 12, 6, 6, 10, 2, 1, 2, 0, 0.5, 0.3333333333333333, 0.16666666666666666, 0.0, 1], ['Bali United', 6, 3, 1, 2, 9, 7, 2, 10, 3, 1, 1, 2, 0.5, 0.3333333333333333, 0.16666666666666666, 0.4, 1], ['Persita', 6, 3, 1, 2, 6, 5, 1, 10, 3, 1, 1, 2, 0.5, 0.3333333333333333, 0.16666666666666666, 0.4, 1], ['Borneo', 6, 2, 3, 1, 8, 6, 2, 9, 2, 2, 1, 0, 0.3333333333333333, 0.16666666666666666, 0.5, 0.2, 1], ['RANS Nusantara', 6, 2, 3, 1, 7, 6, 1, 9, 1, 3, 1, -2, 0.3333333333333333, 0.16666666666666666, 0.5, 0.0, 1], ['PSM', 6, 2, 2, 2, 8, 7, 1, 8, 2, 1, 2, 0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0, 1], ['PSIS Semarang', 6, 2, 2, 2, 7, 6, 1, 8, 1, 2, 2, -3, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, -0.2, 1], ['Persikabo 1973', 6, 2, 2, 2, 8, 7, 1, 8, 2, 2, 1, 0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.2, 1], ['Persib', 6, 1, 4, 1, 10, 11, -1, 7, 1, 3, 1, -2, 0.16666666666666666, 0.16666666666666666, 0.6666666666666666, 0.0, 1], ['Persik Kediri', 6, 2, 1, 3, 11, 12, -1, 7, 2, 0, 3, 2, 0.3333333333333333, 0.5, 0.16666666666666666, -0.2, 0], ['Persis Solo', 6, 1, 3, 2, 10, 11, -1, 6, 1, 3, 1, -2, 0.16666666666666666, 0.3333333333333333, 0.5, 0.0, 1], ['PSS Sleman', 6, 1, 3, 2, 7, 10, -3, 6, 0, 3, 2, -6, 0.16666666666666666, 0.3333333333333333, 0.5, -0.4, 1], ['Persebaya Surabaya', 6, 1, 2, 3, 7, 10, -3, 5, 0, 2, 3, -6, 0.16666666666666666, 0.5, 0.3333333333333333, -0.6, 0], ['Bhayangkara', 6, 1, 1, 4, 5, 12, -7, 4, 1, 1, 3, -2, 0.16666666666666666, 0.6666666666666666, 0.16666666666666666, -0.4, 0], ['Arema', 6, 0, 2, 4, 7, 17, -10, 2, 0, 2, 3, -6, 0.0, 0.6666666666666666, 0.3333333333333333, -0.6, 0], ['Machida Zelvia', 28, 18, 6, 4, 48, 22, 26, 60, 3, 1, 1, 2, 0.6428571428571429, 0.14285714285714285, 0.21428571428571427, 0.4, 1], ['Júbilo Iwata', 29, 15, 9, 5, 53, 31, 22, 54, 4, 1, 0, 4, 0.5172413793103449, 0.1724137931034483, 0.3103448275862069, 0.8, 1], ['Shimizu S-Pulse', 29, 13, 10, 6, 53, 24, 29, 49, 3, 2, 0, 3, 0.4482758620689655, 0.20689655172413793, 0.3448275862068966, 0.6, 1], ['Tokyo Verdy', 29, 14, 7, 8, 38, 22, 16, 49, 1, 3, 1, -2, 0.4827586206896552, 0.27586206896551724, 0.2413793103448276, 0.0, 1], ['V-Varen Nagasaki', 29, 13, 7, 9, 46, 35, 11, 46, 1, 2, 2, -3, 0.4482758620689655, 0.3103448275862069, 0.2413793103448276, -0.2, 1], ['Ventforet Kofu', 29, 14, 4, 11, 42, 35, 7, 46, 2, 0, 3, 2, 0.4827586206896552, 0.3793103448275862, 0.13793103448275862, -0.2, 1], ['Oita Trinita', 29, 13, 7, 9, 36, 37, -1, 46, 1, 1, 3, -2, 0.4482758620689655, 0.3103448275862069, 0.2413793103448276, -0.4, 1], ['ThespaKusatsu Gunma', 29, 11, 11, 7, 33, 28, 5, 44, 3, 2, 0, 3, 0.3793103448275862, 0.2413793103448276, 0.3793103448275862, 0.6, 1], ['Montedio Yamagata', 29, 13, 2, 14, 47, 40, 7, 41, 3, 0, 2, 3, 0.4482758620689655, 0.4827586206896552, 0.06896551724137931, 0.2, 2], ['JEF United', 29, 10, 9, 10, 36, 38, -2, 39, 3, 2, 0, 3, 0.3448275862068966, 0.3448275862068966, 0.3103448275862069, 0.6, 1], ['Fagiano Okayama', 29, 8, 14, 7, 35, 31, 4, 38, 1, 2, 2, -3, 0.27586206896551724, 0.2413793103448276, 0.4827586206896552, -0.2, 1], ['Fujieda MYFC', 29, 10, 7, 12, 42, 51, -9, 37, 0, 2, 3, -6, 0.3448275862068966, 0.41379310344827586, 0.2413793103448276, -0.6, 1], ['Blaublitz Akita', 28, 9, 9, 10, 23, 30, -7, 36, 1, 2, 2, -3, 0.32142857142857145, 0.35714285714285715, 0.32142857142857145, -0.2, 1], ['Roasso Kumamoto', 29, 8, 9, 12, 36, 35, 1, 33, 0, 2, 3, -6, 0.27586206896551724, 0.41379310344827586, 0.3103448275862069, -0.6, 1], ['Vegalta Sendai', 29, 8, 9, 12, 36, 44, -8, 33, 0, 2, 3, -6, 0.27586206896551724, 0.41379310344827586, 0.3103448275862069, -0.6, 1], ['Mito Hollyhock', 29, 8, 9, 12, 33, 46, -13, 33, 1, 3, 1, -2, 0.27586206896551724, 0.41379310344827586, 0.3103448275862069, 0.0, 1], ['Iwaki', 29, 8, 8, 13, 27, 44, -17, 32, 2, 2, 1, 0, 0.27586206896551724, 0.4482758620689655, 0.27586206896551724, 0.2, 1], ['Renofa Yamaguchi', 29, 7, 11, 11, 24, 46, -22, 32, 1, 2, 2, -3, 0.2413793103448276, 0.3793103448275862, 0.3793103448275862, -0.2, 1], ['Tochigi', 29, 7, 10, 12, 26, 29, -3, 31, 1, 3, 1, -2, 0.2413793103448276, 0.41379310344827586, 0.3448275862068966, 0.0, 1], ['Zweigen Kanazawa', 29, 9, 4, 16, 34, 47, -13, 31, 2, 1, 2, 0, 0.3103448275862069, 0.5517241379310345, 0.13793103448275862, 0.0, 0], ['Tokushima Vortis', 29, 5, 14, 10, 29, 41, -12, 29, 0, 3, 2, -6, 0.1724137931034483, 0.3448275862068966, 0.4827586206896552, -0.4, 1], ['Omiya Ardija', 29, 7, 4, 18, 26, 47, -21, 25, 2, 2, 1, 0, 0.2413793103448276, 0.6206896551724138, 0.13793103448275862, 0.2, 0], ['FeralpiSalò', 38, 20, 11, 7, 41, 21, 20, 71, 3, 1, 1, 2, 0.5263157894736842, 0.18421052631578946, 0.2894736842105263, 0.4, 1], ['Pordenone', 38, 16, 14, 8, 53, 35, 18, 62, 2, 1, 2, 0, 0.42105263157894735, 0.21052631578947367, 0.3684210526315789, 0.0, 1], ['Lecco', 38, 17, 11, 10, 45, 40, 5, 62, 2, 2, 1, 0, 0.4473684210526316, 0.2631578947368421, 0.2894736842105263, 0.2, 1], ['Pro Sesto', 38, 16, 12, 10, 46, 45, 1, 60, 1, 0, 4, 1, 0.42105263157894735, 0.2631578947368421, 0.3157894736842105, -0.6, 1], ['Calcio Padova', 38, 15, 14, 9, 47, 40, 7, 59, 4, 0, 1, 4, 0.39473684210526316, 0.23684210526315788, 0.3684210526315789, 0.6, 1], ['Virtus Verona', 38, 15, 13, 10, 46, 30, 16, 58, 3, 1, 1, 2, 0.39473684210526316, 0.2631578947368421, 0.34210526315789475, 0.4, 1], ['Vicenza', 38, 17, 7, 14, 64, 47, 17, 58, 2, 1, 2, 0, 0.4473684210526316, 0.3684210526315789, 0.18421052631578946, 0.0, 1], ['Renate', 38, 14, 11, 13, 49, 55, -6, 53, 2, 1, 2, 0, 0.3684210526315789, 0.34210526315789475, 0.2894736842105263, 0.0, 1], ['Arzignano Valchiampo', 38, 13, 14, 11, 43, 38, 5, 53, 2, 1, 2, 0, 0.34210526315789475, 0.2894736842105263, 0.3684210526315789, 0.0, 1], ['Novara', 38, 15, 7, 16, 48, 45, 3, 52, 1, 2, 2, -3, 0.39473684210526316, 0.42105263157894735, 0.18421052631578946, -0.2, 1], ['Pergolettese', 38, 14, 9, 15, 43, 42, 1, 51, 2, 1, 2, 0, 0.3684210526315789, 0.39473684210526316, 0.23684210526315788, 0.0, 1], ['Pro Patria', 38, 13, 11, 14, 37, 43, -6, 50, 1, 2, 2, -3, 0.34210526315789475, 0.3684210526315789, 0.2894736842105263, -0.2, 1], ['Juventus II', 38, 13, 10, 15, 42, 48, -6, 49, 1, 1, 3, -2, 0.34210526315789475, 0.39473684210526316, 0.2631578947368421, -0.4, 1], ['Trento', 38, 12, 10, 16, 40, 42, -2, 46, 1, 2, 2, -3, 0.3157894736842105, 0.42105263157894735, 0.2631578947368421, -0.2, 1], ['Pro Vercelli', 38, 12, 10, 16, 38, 47, -9, 46, 2, 1, 2, 0, 0.3157894736842105, 0.42105263157894735, 0.2631578947368421, 0.0, 1], ['Mantova', 38, 12, 9, 17, 48, 62, -14, 45, 3, 1, 1, 2, 0.3157894736842105, 0.4473684210526316, 0.23684210526315788, 0.4, 1], ['Sangiuliano City', 38, 12, 6, 20, 38, 46, -8, 42, 1, 1, 3, -2, 0.3157894736842105, 0.5263157894736842, 0.15789473684210525, -0.4, 0], ['Triestina', 38, 9, 12, 17, 31, 45, -14, 39, 1, 3, 1, -2, 0.23684210526315788, 0.4473684210526316, 0.3157894736842105, 0.0, 1], ['AlbinoLeffe', 38, 9, 11, 18, 43, 54, -11, 38, 1, 1, 3, -2, 0.23684210526315788, 0.47368421052631576, 0.2894736842105263, -0.4, 0], ['Piacenza', 38, 8, 14, 16, 42, 59, -17, 38, 2, 3, 0, 2, 0.21052631578947367, 0.42105263157894735, 0.3684210526315789, 0.4, 1], ['Vissel Kobe', 22, 13, 5, 4, 42, 19, 23, 44, 2, 2, 1, 0, 0.5909090909090909, 0.18181818181818182, 0.22727272727272727, 0.2, 1], ['Yokohama F. Marinos', 22, 13, 5, 4, 44, 24, 20, 44, 2, 2, 1, 0, 0.5909090909090909, 0.18181818181818182, 0.22727272727272727, 0.2, 1], ['Nagoya Grampus', 22, 12, 6, 4, 31, 20, 11, 42, 2, 1, 2, 0, 0.5454545454545454, 0.18181818181818182, 0.2727272727272727, 0.0, 1], ['Urawa Reds', 22, 10, 8, 4, 27, 17, 10, 38, 2, 2, 1, 0, 0.45454545454545453, 0.18181818181818182, 0.36363636363636365, 0.2, 1], ['Kashima Antlers', 22, 10, 6, 6, 31, 20, 11, 36, 2, 2, 1, 0, 0.45454545454545453, 0.2727272727272727, 0.2727272727272727, 0.2, 1], ['Cerezo Osaka', 22, 11, 2, 9, 30, 24, 6, 35, 2, 0, 3, 2, 0.5, 0.4090909090909091, 0.09090909090909091, -0.2, 1], ['Kawasaki Frontale', 22, 9, 5, 8, 30, 27, 3, 32, 2, 1, 2, 0, 0.4090909090909091, 0.36363636363636365, 0.22727272727272727, 0.0, 1], ['Avispa Fukuoka', 22, 9, 5, 8, 22, 26, -4, 32, 4, 0, 1, 4, 0.4090909090909091, 0.36363636363636365, 0.22727272727272727, 0.6, 1], ['Sanfrecce Hiroshima', 22, 9, 4, 9, 24, 22, 2, 31, 0, 2, 3, -6, 0.4090909090909091, 0.4090909090909091, 0.18181818181818182, -0.6, 1], ['Sagan Tosu', 22, 8, 5, 9, 29, 27, 2, 29, 2, 0, 3, 2, 0.36363636363636365, 0.4090909090909091, 0.22727272727272727, -0.2, 1], ['Tokyo', 22, 8, 5, 9, 27, 31, -4, 29, 3, 1, 1, 2, 0.36363636363636365, 0.4090909090909091, 0.22727272727272727, 0.4, 1], ['Gamba Osaka', 22, 8, 5, 9, 31, 38, -7, 29, 4, 1, 0, 4, 0.36363636363636365, 0.4090909090909091, 0.22727272727272727, 0.8, 1], ['Consadole Sapporo', 22, 7, 6, 9, 41, 43, -2, 27, 0, 1, 4, -4, 0.3181818181818182, 0.4090909090909091, 0.2727272727272727, -0.8, 1], ['Albirex Niigata', 22, 6, 6, 10, 22, 30, -8, 24, 2, 1, 2, 0, 0.2727272727272727, 0.45454545454545453, 0.2727272727272727, 0.0, 0], ['Kyoto Sanga', 22, 7, 2, 13, 24, 32, -8, 23, 2, 1, 2, 0, 0.3181818181818182, 0.5909090909090909, 0.09090909090909091, 0.0, 0], ['Yokohama', 22, 4, 6, 12, 17, 41, -24, 18, 1, 2, 2, -3, 0.18181818181818182, 0.5454545454545454, 0.2727272727272727, -0.2, 0], ['Kashiwa Reysol', 22, 3, 8, 11, 19, 33, -14, 17, 1, 2, 2, -3, 0.13636363636363635, 0.5, 0.36363636363636365, -0.2, 0], ['Shonan Bellmare', 22, 3, 7, 12, 27, 44, -17, 16, 1, 1, 3, -2, 0.13636363636363635, 0.5454545454545454, 0.3181818181818182, -0.4, 0], [\"Johor Darul Ta'zim\", 18, 18, 0, 0, 69, 3, 66, 54, 5, 0, 0, 5, 1.0, 0.0, 0.0, 1.0, 1], ['Selangor', 19, 13, 1, 5, 43, 19, 24, 40, 3, 0, 2, 3, 0.6842105263157895, 0.2631578947368421, 0.05263157894736842, 0.2, 1], ['Kedah', 18, 12, 1, 5, 35, 21, 14, 37, 4, 0, 1, 4, 0.6666666666666666, 0.2777777777777778, 0.05555555555555555, 0.6, 1], ['Sri Pahang', 18, 11, 4, 3, 30, 18, 12, 37, 4, 0, 1, 4, 0.6111111111111112, 0.16666666666666666, 0.2222222222222222, 0.6, 1], ['Sabah', 19, 11, 3, 5, 43, 25, 18, 36, 4, 0, 1, 4, 0.5789473684210527, 0.2631578947368421, 0.15789473684210525, 0.6, 1], ['Kuala Lumpur City', 18, 7, 7, 4, 32, 29, 3, 28, 1, 3, 1, -2, 0.3888888888888889, 0.2222222222222222, 0.3888888888888889, 0.0, 1], ['Terengganu', 18, 7, 5, 6, 25, 22, 3, 26, 1, 3, 1, -2, 0.3888888888888889, 0.3333333333333333, 0.2777777777777778, 0.0, 1], ['PDRM', 18, 7, 3, 8, 18, 23, -5, 24, 2, 2, 1, 0, 0.3888888888888889, 0.4444444444444444, 0.16666666666666666, 0.2, 1], ['Negeri Sembilan', 18, 4, 9, 5, 25, 32, -7, 21, 0, 3, 2, -6, 0.2222222222222222, 0.2777777777777778, 0.5, -0.4, 1], ['Pulau Pinang', 18, 5, 4, 9, 23, 30, -7, 19, 1, 2, 2, -3, 0.2777777777777778, 0.5, 0.2222222222222222, -0.2, 0], ['Perak', 18, 3, 4, 11, 13, 37, -24, 13, 1, 1, 3, -2, 0.16666666666666666, 0.6111111111111112, 0.2222222222222222, -0.4, 0], ['Kelantan United', 18, 1, 5, 12, 18, 44, -26, 8, 0, 2, 3, -6, 0.05555555555555555, 0.6666666666666666, 0.2777777777777778, -0.6, 0], ['Kuching FA', 18, 1, 4, 13, 14, 37, -23, 7, 0, 1, 4, -4, 0.05555555555555555, 0.7222222222222222, 0.2222222222222222, -0.8, 0], ['Kelantan', 18, 1, 2, 15, 20, 68, -48, 5, 0, 1, 4, -4, 0.05555555555555555, 0.8333333333333334, 0.1111111111111111, -0.8, 0], ['FAR Rabat', 30, 20, 7, 3, 50, 19, 31, 67, 4, 1, 0, 4, 0.6666666666666666, 0.1, 0.23333333333333334, 0.8, 1], ['Wydad Casablanca', 30, 19, 9, 2, 47, 21, 26, 66, 4, 1, 0, 4, 0.6333333333333333, 0.06666666666666667, 0.3, 0.8, 1], ['FUS Rabat', 30, 15, 10, 5, 36, 16, 20, 55, 2, 2, 1, 0, 0.5, 0.16666666666666666, 0.3333333333333333, 0.2, 1], ['Olympic Safi', 30, 12, 11, 7, 34, 28, 6, 47, 2, 1, 2, 0, 0.4, 0.23333333333333334, 0.36666666666666664, 0.0, 1], ['Raja Casablanca', 30, 11, 11, 8, 31, 26, 5, 44, 2, 3, 0, 2, 0.36666666666666664, 0.26666666666666666, 0.36666666666666664, 0.4, 1], ['RSB Berkane', 30, 11, 11, 8, 31, 29, 2, 44, 3, 1, 1, 2, 0.36666666666666664, 0.26666666666666666, 0.36666666666666664, 0.4, 1], ['Hassania Agadir', 30, 10, 9, 11, 30, 29, 1, 39, 2, 3, 0, 2, 0.3333333333333333, 0.36666666666666664, 0.3, 0.4, 1], ['UTS Rabat', 30, 9, 9, 12, 34, 40, -6, 36, 1, 2, 2, -3, 0.3, 0.4, 0.3, -0.2, 1], ['JS Soualem', 30, 9, 9, 12, 31, 40, -9, 36, 1, 0, 4, 1, 0.3, 0.4, 0.3, -0.6, 1], ['Maghreb Fès', 30, 7, 13, 10, 27, 33, -6, 34, 0, 1, 4, -4, 0.23333333333333334, 0.3333333333333333, 0.43333333333333335, -0.8, 1], ['Mouloudia Oujda', 30, 8, 8, 14, 30, 35, -5, 32, 2, 1, 2, 0, 0.26666666666666666, 0.4666666666666667, 0.26666666666666666, 0.0, 0], ['Chabab Mohammédia', 30, 8, 7, 15, 27, 36, -9, 31, 2, 0, 3, 2, 0.26666666666666666, 0.5, 0.23333333333333334, -0.2, 0], ['Moghreb Tétouan', 30, 6, 12, 12, 28, 41, -13, 30, 0, 1, 4, -4, 0.2, 0.4, 0.4, -0.8, 1], ['Ittihad Tanger', 30, 8, 5, 17, 23, 39, -16, 29, 2, 2, 1, 0, 0.26666666666666666, 0.5666666666666667, 0.16666666666666666, 0.2, 0], ['Khouribga', 30, 5, 13, 12, 29, 36, -7, 28, 2, 1, 2, 0, 0.16666666666666666, 0.4, 0.43333333333333335, 0.0, 1], ['Difaâ El Jadida', 30, 5, 10, 15, 24, 44, -20, 25, 0, 2, 3, -6, 0.16666666666666666, 0.5, 0.3333333333333333, -0.6, 0], ['Bodø / Glimt', 18, 13, 2, 3, 45, 21, 24, 41, 3, 0, 2, 3, 0.7222222222222222, 0.16666666666666666, 0.1111111111111111, 0.2, 1], ['Viking', 17, 12, 2, 3, 39, 24, 15, 38, 5, 0, 0, 5, 0.7058823529411765, 0.17647058823529413, 0.11764705882352941, 1.0, 1], ['Tromsø', 17, 11, 3, 3, 26, 15, 11, 36, 3, 1, 1, 2, 0.6470588235294118, 0.17647058823529413, 0.17647058823529413, 0.4, 1], ['Molde', 17, 10, 2, 5, 39, 19, 20, 32, 4, 1, 0, 4, 0.5882352941176471, 0.29411764705882354, 0.11764705882352941, 0.8, 1], ['Brann', 18, 9, 3, 6, 30, 23, 7, 30, 2, 0, 3, 2, 0.5, 0.3333333333333333, 0.16666666666666666, -0.2, 1], ['Lillestrøm', 17, 9, 2, 6, 33, 26, 7, 29, 3, 0, 2, 3, 0.5294117647058824, 0.35294117647058826, 0.11764705882352941, 0.2, 1], ['Odd', 18, 7, 4, 7, 21, 19, 2, 25, 3, 0, 2, 3, 0.3888888888888889, 0.3888888888888889, 0.2222222222222222, 0.2, 1], ['Rosenborg', 18, 7, 4, 7, 23, 25, -2, 25, 4, 0, 1, 4, 0.3888888888888889, 0.3888888888888889, 0.2222222222222222, 0.6, 1], ['Sarpsborg 08', 17, 7, 3, 7, 29, 31, -2, 24, 1, 0, 4, 1, 0.4117647058823529, 0.4117647058823529, 0.17647058823529413, -0.6, 1], ['Strømsgodset', 17, 6, 2, 9, 20, 22, -2, 20, 1, 0, 4, 1, 0.35294117647058826, 0.5294117647058824, 0.11764705882352941, -0.6, 2], ['Haugesund', 17, 5, 3, 9, 16, 25, -9, 18, 1, 0, 4, 1, 0.29411764705882354, 0.5294117647058824, 0.17647058823529413, -0.6, 0], ['Sandefjord', 16, 4, 4, 8, 25, 33, -8, 16, 2, 1, 2, 0, 0.25, 0.5, 0.25, 0.0, 0], ['Stabæk', 17, 4, 4, 9, 17, 29, -12, 16, 0, 1, 4, -4, 0.23529411764705882, 0.5294117647058824, 0.23529411764705882, -0.8, 0], ['HamKam', 17, 5, 1, 11, 20, 39, -19, 16, 3, 0, 2, 3, 0.29411764705882354, 0.6470588235294118, 0.058823529411764705, 0.2, 0], ['Vålerenga', 16, 4, 2, 10, 21, 29, -8, 14, 1, 1, 3, -2, 0.25, 0.625, 0.125, -0.4, 0], ['Aalesund', 17, 3, 1, 13, 12, 36, -24, 10, 1, 0, 4, 1, 0.17647058823529413, 0.7647058823529411, 0.058823529411764705, -0.6, 0], ['Libertad', 22, 16, 3, 3, 39, 15, 24, 51, 3, 1, 1, 2, 0.7272727272727273, 0.13636363636363635, 0.13636363636363635, 0.4, 1], ['Cerro Porteño', 22, 11, 8, 3, 40, 29, 11, 41, 1, 2, 2, -3, 0.5, 0.13636363636363635, 0.36363636363636365, -0.2, 1], ['Sportivo Trinidense', 22, 11, 5, 6, 34, 21, 13, 38, 4, 1, 0, 4, 0.5, 0.2727272727272727, 0.22727272727272727, 0.8, 1], ['Club Guaraní', 22, 8, 9, 5, 29, 24, 5, 33, 1, 2, 2, -3, 0.36363636363636365, 0.22727272727272727, 0.4090909090909091, -0.2, 1], ['Nacional Asunción', 22, 9, 6, 7, 23, 21, 2, 33, 3, 1, 1, 2, 0.4090909090909091, 0.3181818181818182, 0.2727272727272727, 0.4, 1], ['Olimpia', 22, 8, 7, 7, 32, 26, 6, 31, 2, 1, 2, 0, 0.36363636363636365, 0.3181818181818182, 0.3181818181818182, 0.0, 1], ['Sportivo Ameliano', 22, 7, 9, 6, 27, 28, -1, 30, 1, 2, 2, -3, 0.3181818181818182, 0.2727272727272727, 0.4090909090909091, -0.2, 1], ['Sportivo Luqueño', 22, 6, 9, 7, 27, 28, -1, 27, 1, 2, 2, -3, 0.2727272727272727, 0.3181818181818182, 0.4090909090909091, -0.2, 1], ['General Caballero JLM', 22, 6, 6, 10, 21, 28, -7, 24, 2, 2, 1, 0, 0.2727272727272727, 0.45454545454545453, 0.2727272727272727, 0.2, 0], ['Guaireña', 22, 3, 8, 11, 15, 31, -16, 17, 1, 2, 2, -3, 0.13636363636363635, 0.5, 0.36363636363636365, -0.2, 0], ['Resistencia', 22, 4, 5, 13, 14, 35, -21, 17, 1, 1, 3, -2, 0.18181818181818182, 0.5909090909090909, 0.22727272727272727, -0.4, 0], ['Tacuary', 22, 4, 3, 15, 16, 31, -15, 15, 1, 1, 3, -2, 0.18181818181818182, 0.6818181818181818, 0.13636363636363635, -0.4, 0], ['Alianza Lima', 18, 14, 0, 4, 37, 16, 21, 42, 3, 0, 2, 3, 0.7777777777777778, 0.2222222222222222, 0.0, 0.2, 1], ['Sporting Cristal', 18, 9, 8, 1, 33, 18, 15, 35, 4, 1, 0, 4, 0.5, 0.05555555555555555, 0.4444444444444444, 0.8, 1], ['Universitario', 18, 11, 1, 6, 29, 14, 15, 34, 2, 0, 3, 2, 0.6111111111111112, 0.3333333333333333, 0.05555555555555555, -0.2, 1], ['Cusco', 18, 10, 2, 6, 24, 22, 2, 32, 3, 0, 2, 3, 0.5555555555555556, 0.3333333333333333, 0.1111111111111111, 0.2, 1], ['Sport Huancayo', 18, 8, 3, 7, 30, 25, 5, 27, 3, 0, 2, 3, 0.4444444444444444, 0.3888888888888889, 0.16666666666666666, 0.2, 1], ['César Vallejo', 18, 7, 6, 5, 25, 23, 2, 27, 1, 2, 2, -3, 0.3888888888888889, 0.2777777777777778, 0.3333333333333333, -0.2, 1], ['Carlos Mannucci', 18, 8, 3, 7, 17, 18, -1, 27, 1, 1, 3, -2, 0.4444444444444444, 0.3888888888888889, 0.16666666666666666, -0.4, 1], ['Deportivo Garcilaso', 18, 6, 7, 5, 32, 27, 5, 25, 2, 2, 1, 0, 0.3333333333333333, 0.2777777777777778, 0.3888888888888889, 0.2, 1], ['Melgar', 18, 6, 7, 5, 24, 22, 2, 25, 3, 1, 1, 2, 0.3333333333333333, 0.2777777777777778, 0.3888888888888889, 0.4, 1], ['Cienciano', 18, 7, 3, 8, 23, 28, -5, 24, 1, 1, 3, -2, 0.3888888888888889, 0.4444444444444444, 0.16666666666666666, -0.4, 1], ['Atlético Grau', 18, 6, 5, 7, 31, 21, 10, 23, 2, 1, 2, 0, 0.3333333333333333, 0.3888888888888889, 0.2777777777777778, 0.0, 1], ['Alianza Atlético', 18, 6, 5, 7, 32, 33, -1, 23, 2, 1, 2, 0, 0.3333333333333333, 0.3888888888888889, 0.2777777777777778, 0.0, 1], ['ADT', 18, 5, 6, 7, 23, 23, 0, 21, 1, 2, 2, -3, 0.2777777777777778, 0.3888888888888889, 0.3333333333333333, -0.2, 1], ['Deportivo Municipal', 18, 7, 3, 8, 19, 21, -2, 21, 2, 0, 3, 2, 0.3888888888888889, 0.4444444444444444, 0.16666666666666666, -0.2, 1], ['UTC Cajamarca', 18, 5, 6, 7, 16, 22, -6, 21, 2, 0, 3, 2, 0.2777777777777778, 0.3888888888888889, 0.3333333333333333, -0.2, 1], ['Unión Comercio', 18, 5, 4, 9, 24, 40, -16, 19, 1, 2, 2, -3, 0.2777777777777778, 0.5, 0.2222222222222222, -0.2, 0], ['Deportivo Binacional', 18, 5, 3, 10, 28, 34, -6, 18, 2, 0, 3, 2, 0.2777777777777778, 0.5555555555555556, 0.16666666666666666, -0.2, 0], ['Sport Boys', 18, 5, 3, 10, 13, 26, -13, 18, 3, 1, 1, 2, 0.2777777777777778, 0.5555555555555556, 0.16666666666666666, 0.4, 0], ['Academia Cantolao', 18, 2, 3, 13, 9, 36, -27, 9, 0, 3, 2, -6, 0.1111111111111111, 0.7222222222222222, 0.16666666666666666, -0.4, 0], ['Al Hilal Omdurman', 20, 17, 2, 1, 55, 12, 43, 53, 5, 0, 0, 5, 0.85, 0.05, 0.1, 1.0, 1], ['Al Merreikh', 19, 15, 3, 1, 33, 8, 25, 48, 5, 0, 0, 5, 0.7894736842105263, 0.05263157894736842, 0.15789473684210525, 1.0, 1], ['Hay Al Arab', 26, 14, 6, 6, 39, 26, 13, 48, 3, 1, 1, 2, 0.5384615384615384, 0.23076923076923078, 0.23076923076923078, 0.4, 1], ['Haidob En Nahud', 28, 13, 6, 9, 32, 25, 7, 45, 2, 1, 2, 0, 0.4642857142857143, 0.32142857142857145, 0.21428571428571427, 0.0, 1], ['Al Ahli Khartoum', 28, 10, 9, 9, 35, 29, 6, 39, 2, 1, 2, 0, 0.35714285714285715, 0.32142857142857145, 0.32142857142857145, 0.0, 1], ['Hay Al Wadi', 24, 10, 8, 6, 28, 27, 1, 38, 4, 1, 0, 4, 0.4166666666666667, 0.25, 0.3333333333333333, 0.8, 1], ['Hilal El-Fasher', 29, 10, 8, 11, 31, 31, 0, 38, 2, 2, 1, 0, 0.3448275862068966, 0.3793103448275862, 0.27586206896551724, 0.2, 1], ['Alamal Atbara', 26, 10, 5, 11, 24, 28, -4, 35, 2, 1, 2, 0, 0.38461538461538464, 0.4230769230769231, 0.19230769230769232, 0.0, 1], ['Kober', 29, 9, 8, 12, 32, 38, -6, 35, 4, 0, 1, 4, 0.3103448275862069, 0.41379310344827586, 0.27586206896551724, 0.6, 1], ['Al Shorta', 27, 10, 5, 12, 28, 34, -6, 35, 3, 0, 2, 3, 0.37037037037037035, 0.4444444444444444, 0.18518518518518517, 0.2, 1], ['Al Hilal Port Sudan', 26, 8, 10, 8, 25, 28, -3, 34, 1, 2, 2, -3, 0.3076923076923077, 0.3076923076923077, 0.38461538461538464, -0.2, 1], ['Wad Nubawi', 27, 6, 14, 7, 20, 24, -4, 32, 1, 3, 1, -2, 0.2222222222222222, 0.25925925925925924, 0.5185185185185185, 0.0, 1], ['Al Fallah', 25, 6, 11, 8, 21, 19, 2, 29, 0, 4, 1, -4, 0.24, 0.32, 0.44, -0.2, 1], ['Al Ahly Shendi', 26, 7, 7, 12, 15, 26, -11, 28, 1, 1, 3, -2, 0.2692307692307692, 0.46153846153846156, 0.2692307692307692, -0.4, 0], ['Tuti', 27, 7, 6, 14, 26, 38, -12, 27, 0, 0, 5, 0, 0.25925925925925924, 0.5185185185185185, 0.2222222222222222, -1.0, 0], ['Al-Ahly Merowe', 27, 4, 13, 10, 19, 36, -17, 25, 1, 2, 2, -3, 0.14814814814814814, 0.37037037037037035, 0.48148148148148145, -0.2, 1], ['Al Rabta Kosti', 26, 5, 7, 14, 16, 32, -16, 22, 1, 3, 1, -2, 0.19230769230769232, 0.5384615384615384, 0.2692307692307692, 0.0, 0], ['Al Zoma Khartoum', 28, 4, 10, 14, 22, 40, -18, 22, 1, 1, 3, -2, 0.14285714285714285, 0.5, 0.35714285714285715, -0.4, 0], ['Elfsborg', 18, 13, 3, 2, 41, 14, 27, 42, 3, 1, 1, 2, 0.7222222222222222, 0.1111111111111111, 0.16666666666666666, 0.4, 1], ['Häcken', 18, 12, 2, 4, 45, 20, 25, 38, 3, 1, 1, 2, 0.6666666666666666, 0.2222222222222222, 0.1111111111111111, 0.4, 1], ['Malmö FF', 17, 12, 2, 3, 38, 15, 23, 38, 2, 1, 2, 0, 0.7058823529411765, 0.17647058823529413, 0.11764705882352941, 0.0, 1], ['Djurgården', 18, 10, 3, 5, 26, 22, 4, 33, 4, 0, 1, 4, 0.5555555555555556, 0.2777777777777778, 0.16666666666666666, 0.6, 1], ['Kalmar', 18, 7, 5, 6, 21, 24, -3, 26, 1, 1, 3, -2, 0.3888888888888889, 0.3333333333333333, 0.2777777777777778, -0.4, 1], ['Norrköping', 17, 7, 4, 6, 25, 22, 3, 25, 2, 1, 2, 0, 0.4117647058823529, 0.35294117647058826, 0.23529411764705882, 0.0, 1], ['Hammarby', 18, 7, 4, 7, 24, 27, -3, 25, 3, 0, 2, 3, 0.3888888888888889, 0.3888888888888889, 0.2222222222222222, 0.2, 1], ['Halmstad', 17, 7, 4, 6, 17, 25, -8, 25, 1, 3, 1, -2, 0.4117647058823529, 0.35294117647058826, 0.23529411764705882, 0.0, 1], ['Mjällby', 17, 6, 4, 7, 16, 19, -3, 22, 2, 1, 2, 0, 0.35294117647058826, 0.4117647058823529, 0.23529411764705882, 0.0, 1], ['Värnamo', 18, 7, 1, 10, 19, 23, -4, 22, 2, 1, 2, 0, 0.3888888888888889, 0.5555555555555556, 0.05555555555555555, 0.0, 2], ['Brommapojkarna', 18, 7, 1, 10, 20, 28, -8, 22, 1, 0, 4, 1, 0.3888888888888889, 0.5555555555555556, 0.05555555555555555, -0.6, 2], ['AIK', 18, 4, 6, 8, 16, 21, -5, 18, 2, 2, 1, 0, 0.2222222222222222, 0.4444444444444444, 0.3333333333333333, 0.2, 1], ['Sirius', 18, 4, 5, 9, 21, 28, -7, 17, 1, 0, 4, 1, 0.2222222222222222, 0.5, 0.2777777777777778, -0.6, 0], ['Degerfors', 18, 5, 2, 11, 18, 41, -23, 17, 2, 0, 3, 2, 0.2777777777777778, 0.6111111111111112, 0.1111111111111111, -0.2, 0], ['IFK Göteborg', 17, 2, 7, 8, 15, 19, -4, 13, 1, 3, 1, -2, 0.11764705882352941, 0.47058823529411764, 0.4117647058823529, 0.0, 0], ['Varberg', 17, 2, 5, 10, 16, 30, -14, 11, 2, 0, 3, 2, 0.11764705882352941, 0.5882352941176471, 0.29411764705882354, -0.2, 0], ['Young Africans', 30, 25, 3, 2, 61, 18, 43, 78, 3, 1, 1, 2, 0.8333333333333334, 0.06666666666666667, 0.1, 0.4, 1], ['Simba', 30, 22, 7, 1, 75, 17, 58, 73, 4, 1, 0, 4, 0.7333333333333333, 0.03333333333333333, 0.23333333333333334, 0.8, 1], ['Azam', 30, 18, 5, 7, 55, 29, 26, 59, 4, 0, 1, 4, 0.6, 0.23333333333333334, 0.16666666666666666, 0.6, 1], ['Singida Big Stars', 30, 16, 7, 7, 35, 26, 9, 55, 2, 1, 2, 0, 0.5333333333333333, 0.23333333333333334, 0.23333333333333334, 0.0, 1], ['Namungo', 30, 11, 7, 12, 29, 33, -4, 40, 2, 2, 1, 0, 0.36666666666666664, 0.4, 0.23333333333333334, 0.2, 1], ['Ihefu', 30, 12, 3, 15, 31, 32, -1, 39, 2, 0, 3, 2, 0.4, 0.5, 0.1, -0.2, 2], ['Geita Gold', 30, 9, 10, 11, 35, 44, -9, 37, 1, 0, 4, 1, 0.3, 0.36666666666666664, 0.3333333333333333, -0.6, 1], ['Tanzania Prisons', 30, 10, 7, 13, 29, 38, -9, 37, 4, 0, 1, 4, 0.3333333333333333, 0.43333333333333335, 0.23333333333333334, 0.6, 1], ['Dodoma Jiji', 30, 11, 4, 15, 26, 37, -11, 37, 3, 1, 1, 2, 0.36666666666666664, 0.5, 0.13333333333333333, 0.4, 2], ['Mtibwa Sugar', 30, 9, 8, 13, 34, 45, -11, 35, 2, 0, 3, 2, 0.3, 0.43333333333333335, 0.26666666666666666, -0.2, 1], ['Kagera Sugar', 30, 9, 8, 13, 23, 36, -13, 35, 1, 0, 4, 1, 0.3, 0.43333333333333335, 0.26666666666666666, -0.6, 1], ['Coastal Union', 30, 8, 9, 13, 25, 35, -10, 33, 2, 1, 2, 0, 0.26666666666666666, 0.43333333333333335, 0.3, 0.0, 1], ['KMC', 30, 8, 8, 14, 25, 31, -6, 32, 2, 0, 3, 2, 0.26666666666666666, 0.4666666666666667, 0.26666666666666666, -0.2, 0], ['Mbeya City', 30, 7, 10, 13, 34, 44, -10, 31, 1, 1, 3, -2, 0.23333333333333334, 0.43333333333333335, 0.3333333333333333, -0.4, 1], ['Polisi Tanzania', 30, 6, 7, 17, 25, 54, -29, 25, 2, 0, 3, 2, 0.2, 0.5666666666666667, 0.23333333333333334, -0.2, 0], ['Ruvu Shooting', 30, 5, 5, 20, 19, 42, -23, 20, 0, 0, 5, 0, 0.16666666666666666, 0.6666666666666666, 0.16666666666666666, -1.0, 0], ['Cincinnati', 23, 15, 6, 2, 39, 25, 14, 51, 2, 2, 1, 0, 0.6521739130434783, 0.08695652173913043, 0.2608695652173913, 0.2, 1], ['New England', 23, 12, 7, 4, 42, 28, 14, 43, 3, 1, 1, 2, 0.5217391304347826, 0.17391304347826086, 0.30434782608695654, 0.4, 1], ['Philadelphia Union', 23, 12, 4, 7, 39, 26, 13, 40, 3, 0, 2, 3, 0.5217391304347826, 0.30434782608695654, 0.17391304347826086, 0.2, 1], ['Nashville SC', 24, 11, 5, 8, 31, 22, 9, 38, 1, 0, 4, 1, 0.4583333333333333, 0.3333333333333333, 0.20833333333333334, -0.6, 1], ['Orlando City', 23, 10, 7, 6, 34, 28, 6, 37, 3, 1, 1, 2, 0.43478260869565216, 0.2608695652173913, 0.30434782608695654, 0.4, 1], ['Columbus Crew', 23, 10, 6, 7, 45, 33, 12, 36, 2, 2, 1, 0, 0.43478260869565216, 0.30434782608695654, 0.2608695652173913, 0.2, 1], ['Atlanta United', 24, 9, 8, 7, 42, 39, 3, 35, 2, 0, 3, 2, 0.375, 0.2916666666666667, 0.3333333333333333, -0.2, 1], ['Chicago Fire', 23, 8, 8, 7, 31, 31, 0, 32, 4, 0, 1, 4, 0.34782608695652173, 0.30434782608695654, 0.34782608695652173, 0.6, 1], ['DC United', 24, 8, 6, 10, 32, 34, -2, 30, 2, 1, 2, 0, 0.3333333333333333, 0.4166666666666667, 0.25, 0.0, 1], ['Montréal', 23, 9, 2, 12, 22, 32, -10, 29, 1, 1, 3, -2, 0.391304347826087, 0.5217391304347826, 0.08695652173913043, -0.4, 2], ['New York RB', 23, 6, 8, 9, 22, 26, -4, 26, 2, 0, 3, 2, 0.2608695652173913, 0.391304347826087, 0.34782608695652173, -0.2, 1], ['Charlotte', 23, 6, 8, 9, 30, 40, -10, 26, 0, 4, 1, -4, 0.2608695652173913, 0.391304347826087, 0.34782608695652173, -0.2, 1], ['New York City', 24, 5, 11, 8, 25, 30, -5, 26, 1, 3, 1, -2, 0.20833333333333334, 0.3333333333333333, 0.4583333333333333, 0.0, 1], ['Toronto', 24, 3, 10, 11, 18, 33, -15, 19, 0, 0, 5, 0, 0.125, 0.4583333333333333, 0.4166666666666667, -1.0, 0], ['Inter Miami', 22, 5, 3, 14, 22, 36, -14, 18, 0, 3, 2, -6, 0.22727272727272727, 0.6363636363636364, 0.13636363636363635, -0.4, 0], ['St. Louis City', 23, 13, 2, 8, 43, 27, 16, 41, 4, 0, 1, 4, 0.5652173913043478, 0.34782608695652173, 0.08695652173913043, 0.6, 1], ['Los Angeles', 23, 10, 7, 6, 34, 25, 9, 37, 1, 2, 2, -3, 0.43478260869565216, 0.2608695652173913, 0.30434782608695654, -0.2, 1], ['Real Salt Lake', 24, 10, 7, 7, 35, 34, 1, 37, 3, 2, 0, 3, 0.4166666666666667, 0.2916666666666667, 0.2916666666666667, 0.6, 1], ['Seattle Sounders', 24, 10, 6, 8, 29, 23, 6, 36, 2, 2, 1, 0, 0.4166666666666667, 0.3333333333333333, 0.25, 0.2, 1], ['Austin', 23, 9, 5, 9, 32, 32, 0, 32, 3, 1, 1, 2, 0.391304347826087, 0.391304347826087, 0.21739130434782608, 0.4, 1], ['SJ Earthquakes', 23, 8, 8, 7, 28, 29, -1, 32, 1, 2, 2, -3, 0.34782608695652173, 0.30434782608695654, 0.34782608695652173, -0.2, 1], ['Vancouver Whitecaps', 22, 8, 7, 7, 38, 32, 6, 31, 3, 0, 2, 3, 0.36363636363636365, 0.3181818181818182, 0.3181818181818182, 0.2, 1], ['Dallas', 23, 8, 6, 9, 25, 26, -1, 30, 1, 1, 3, -2, 0.34782608695652173, 0.391304347826087, 0.2608695652173913, -0.4, 1], ['Houston Dynamo', 23, 8, 5, 10, 26, 31, -5, 29, 0, 2, 3, -6, 0.34782608695652173, 0.43478260869565216, 0.21739130434782608, -0.6, 1], ['Minnesota United FC', 22, 7, 7, 8, 26, 30, -4, 28, 2, 2, 1, 0, 0.3181818181818182, 0.36363636363636365, 0.3181818181818182, 0.2, 1], ['Sporting KC', 25, 6, 8, 11, 31, 36, -5, 26, 1, 2, 2, -3, 0.24, 0.44, 0.32, -0.2, 1], ['Portland Timbers', 23, 6, 8, 9, 26, 33, -7, 26, 1, 2, 2, -3, 0.2608695652173913, 0.391304347826087, 0.34782608695652173, -0.2, 1], ['LA Galaxy', 22, 5, 7, 10, 25, 37, -12, 22, 2, 2, 1, 0, 0.22727272727272727, 0.45454545454545453, 0.3181818181818182, 0.2, 0], ['Colorado Rapids', 23, 3, 10, 10, 16, 30, -14, 19, 1, 3, 1, -2, 0.13043478260869565, 0.43478260869565216, 0.43478260869565216, 0.0, 1], ['Công An Hà Nội', 18, 10, 4, 4, 35, 20, 15, 34, 3, 1, 1, 2, 0.5555555555555556, 0.2222222222222222, 0.2222222222222222, 0.4, 1], ['Ha Noi', 18, 9, 5, 4, 29, 19, 10, 32, 3, 1, 1, 2, 0.5, 0.2222222222222222, 0.2777777777777778, 0.4, 1], ['Viettel', 18, 8, 8, 2, 21, 11, 10, 32, 3, 2, 0, 3, 0.4444444444444444, 0.1111111111111111, 0.4444444444444444, 0.6, 1], ['Thanh Hóa', 18, 8, 6, 4, 25, 18, 7, 30, 2, 1, 2, 0, 0.4444444444444444, 0.2222222222222222, 0.3333333333333333, 0.0, 1], ['Hai Phong', 18, 6, 7, 5, 19, 21, -2, 25, 2, 0, 3, 2, 0.3333333333333333, 0.2777777777777778, 0.3888888888888889, -0.2, 1], ['Nam Dinh', 18, 5, 8, 5, 15, 18, -3, 23, 1, 1, 3, -2, 0.2777777777777778, 0.2777777777777778, 0.4444444444444444, -0.4, 1], ['Hồng Lĩnh Hà Tĩnh', 18, 4, 10, 4, 24, 28, -4, 22, 0, 4, 1, -4, 0.2222222222222222, 0.2222222222222222, 0.5555555555555556, -0.2, 1], ['Binh Dinh', 18, 5, 6, 7, 20, 25, -5, 21, 0, 2, 3, -6, 0.2777777777777778, 0.3888888888888889, 0.3333333333333333, -0.6, 1], ['Highlanders', 18, 10, 8, 0, 15, 4, 11, 38, 4, 1, 0, 4, 0.5555555555555556, 0.0, 0.4444444444444444, 0.8, 1], ['Ngezi Platinum', 18, 9, 6, 3, 22, 13, 9, 33, 2, 1, 2, 0, 0.5, 0.16666666666666666, 0.3333333333333333, 0.0, 1], ['Manica Diamonds', 18, 9, 5, 4, 22, 10, 12, 32, 3, 1, 1, 2, 0.5, 0.2222222222222222, 0.2777777777777778, 0.4, 1], ['Dynamos', 18, 7, 8, 3, 22, 8, 14, 29, 2, 2, 1, 0, 0.3888888888888889, 0.16666666666666666, 0.4444444444444444, 0.2, 1], ['Chicken Inn', 18, 7, 7, 4, 18, 14, 4, 28, 2, 1, 2, 0, 0.3888888888888889, 0.2222222222222222, 0.3888888888888889, 0.0, 1], ['Platinum', 18, 7, 5, 6, 17, 16, 1, 26, 0, 2, 3, -6, 0.3888888888888889, 0.3333333333333333, 0.2777777777777778, -0.6, 1], ['Herentals', 18, 6, 7, 5, 20, 18, 2, 25, 3, 1, 1, 2, 0.3333333333333333, 0.2777777777777778, 0.3888888888888889, 0.4, 1], ['CAPS United', 18, 6, 6, 6, 18, 15, 3, 24, 1, 1, 3, -2, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, -0.4, 1], ['Green Fuel', 18, 6, 5, 7, 16, 17, -1, 23, 3, 1, 1, 2, 0.3333333333333333, 0.3888888888888889, 0.2777777777777778, 0.4, 1], ['Bulawayo Chiefs', 18, 6, 5, 7, 23, 21, 2, 23, 2, 0, 3, 2, 0.3333333333333333, 0.3888888888888889, 0.2777777777777778, -0.2, 1], ['Kariba', 18, 6, 4, 8, 13, 23, -10, 22, 2, 2, 1, 0, 0.3333333333333333, 0.4444444444444444, 0.2222222222222222, 0.2, 1], ['Hwange', 18, 5, 6, 7, 14, 17, -3, 21, 1, 3, 1, -2, 0.2777777777777778, 0.3888888888888889, 0.3333333333333333, 0.0, 1], ['Simba Bhora', 18, 4, 8, 6, 14, 15, -1, 20, 2, 2, 1, 0, 0.2222222222222222, 0.3333333333333333, 0.4444444444444444, 0.2, 1], ['Triangle United', 18, 3, 11, 4, 12, 16, -4, 20, 0, 2, 3, -6, 0.16666666666666666, 0.2222222222222222, 0.6111111111111112, -0.6, 1], ['Sheasham', 18, 3, 11, 4, 9, 16, -7, 20, 2, 3, 0, 2, 0.16666666666666666, 0.2222222222222222, 0.6111111111111112, 0.4, 1], ['Yadah', 18, 5, 2, 11, 12, 25, -13, 17, 1, 0, 4, 1, 0.2777777777777778, 0.6111111111111112, 0.1111111111111111, -0.6, 0], ['Cranborne Bullets', 18, 4, 4, 10, 10, 17, -7, 16, 1, 0, 4, 1, 0.2222222222222222, 0.5555555555555556, 0.2222222222222222, -0.6, 0], ['Black Rhinos', 18, 2, 6, 10, 9, 21, -12, 12, 1, 3, 1, -2, 0.1111111111111111, 0.5555555555555556, 0.3333333333333333, 0.0, 0]]\n"
          ]
        }
      ],
      "source": [
        "data, data_ = teams()\n",
        "print(data_)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qhxlSKxsHvOX",
        "outputId": "b76bc442-b437-45e8-ed5c-398c1bafd1df"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                  Team  Played  Won  Drawn  Lost  GF  GA  GD  Points  \\\n",
            "0           Belouizdad      30   18     10     2  44  21  23      64   \n",
            "1       CS Constantine      30   14      8     8  39  26  13      50   \n",
            "2             MC Alger      30   12     11     7  21  20   1      47   \n",
            "3            El Bayadh      30   13      7    10  34  25   9      46   \n",
            "4            ASO Chlef      30   11      9    10  36  31   5      42   \n",
            "..                 ...     ...  ...    ...   ...  ..  ..  ..     ...   \n",
            "463    Triangle United      18    3     11     4  12  16  -4      20   \n",
            "464           Sheasham      18    3     11     4   9  16  -7      20   \n",
            "465              Yadah      18    5      2    11  12  25 -13      17   \n",
            "466  Cranborne Bullets      18    4      4    10  10  17  -7      16   \n",
            "467       Black Rhinos      18    2      6    10   9  21 -12      12   \n",
            "\n",
            "     Last_5_W  Last_5_D  Last_5_L  Team_Form  Win_rate  Loss_rate  Draw_rate  \\\n",
            "0           3         1         1          2  0.600000   0.066667   0.333333   \n",
            "1           1         1         3         -2  0.466667   0.266667   0.266667   \n",
            "2           2         2         1          0  0.400000   0.233333   0.366667   \n",
            "3           3         1         1          2  0.433333   0.333333   0.233333   \n",
            "4           3         0         2          3  0.366667   0.333333   0.300000   \n",
            "..        ...       ...       ...        ...       ...        ...        ...   \n",
            "463         0         2         3         -6  0.166667   0.222222   0.611111   \n",
            "464         2         3         0          2  0.166667   0.222222   0.611111   \n",
            "465         1         0         4          1  0.277778   0.611111   0.111111   \n",
            "466         1         0         4          1  0.222222   0.555556   0.222222   \n",
            "467         1         3         1         -2  0.111111   0.555556   0.333333   \n",
            "\n",
            "     Performance_trend  Outcome  \n",
            "0                  0.4        1  \n",
            "1                 -0.4        1  \n",
            "2                  0.2        1  \n",
            "3                  0.4        1  \n",
            "4                  0.2        1  \n",
            "..                 ...      ...  \n",
            "463               -0.6        1  \n",
            "464                0.4        1  \n",
            "465               -0.6        0  \n",
            "466               -0.6        0  \n",
            "467                0.0        0  \n",
            "\n",
            "[468 rows x 18 columns]\n"
          ]
        }
      ],
      "source": [
        "df = pd.DataFrame(data_, columns=[\"Team\", \"Played\", \"Won\", \"Drawn\", \"Lost\",\n",
        "                                  \"GF\", \"GA\", \"GD\", \"Points\", \"Last_5_W\",\n",
        "                                  \"Last_5_D\", \"Last_5_L\", \"Team_Form\",\n",
        "                                  \"Win_rate\", \"Loss_rate\", \"Draw_rate\",\n",
        "                                  \"Performance_trend\",\"Outcome\"])\n",
        "print(df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "Tn9Jg0aP_pIB"
      },
      "outputs": [],
      "source": [
        "try:\n",
        "    df = df.query('Team_Form > 2 or Team_Form < -1')\n",
        "except:\n",
        "    pass\n",
        "\n",
        "# Encoding the labels\n",
        "le = LabelEncoder()\n",
        "le.fit(df[\"Team\"])\n",
        "\n",
        "# Splitting the data into training and testing sets\n",
        "X = df.drop(columns=[\"Outcome\"])\n",
        "y = df[\"Outcome\"]\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Transforming the labels\n",
        "X_train[\"Team\"] = le.transform(X_train[\"Team\"])\n",
        "X_test[\"Team\"] = le.transform(X_test[\"Team\"])\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fjXznh3AHm0X",
        "outputId": "ad7df7b8-8fe8-431f-f226-123cb4536f5b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 1.0\n",
            "Precision: 1.0\n",
            "Recall: 1.0\n",
            "F1-score: 1.0\n"
          ]
        }
      ],
      "source": [
        "rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
        "rf_model.fit(X_train, y_train)\n",
        "\n",
        "# Evaluating the model on the testing data\n",
        "y_pred = rf_model.predict(X_test)\n",
        "\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "precision = precision_score(y_test, y_pred, average='weighted')\n",
        "recall = recall_score(y_test, y_pred, average='weighted')\n",
        "f1 = f1_score(y_test, y_pred, average='weighted')\n",
        "print(f\"Accuracy: {accuracy}\")\n",
        "print(f\"Precision: {precision}\")\n",
        "print(f\"Recall: {recall}\")\n",
        "print(f\"F1-score: {f1}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "FHrIeq4NCgZ6"
      },
      "outputs": [],
      "source": [
        "def prediction():\n",
        "    try:\n",
        "        # Getting predictions for all the data\n",
        "        all_data = pd.concat([X_train, X_test])\n",
        "        all_predictions = rf_model.predict(all_data)\n",
        "        all_outcome = pd.concat([y_train, y_test])\n",
        "\n",
        "        # Getting the team names and outcomes\n",
        "        team_names = le.inverse_transform(all_data[\"Team\"])\n",
        "        outcomes =  le.inverse_transform(all_outcome)\n",
        "        predictions = le.inverse_transform(all_predictions)\n",
        "\n",
        "        # Creating a dataframe with team names and their predicted outcomes\n",
        "        team_predictions = pd.DataFrame({\"Team\": team_names, \"Outcome\": outcomes, \"Prediction\": predictions})\n",
        "\n",
        "        # Printing the teams to be considered as favorites\n",
        "        for_team = team_predictions[le.transform(team_predictions[\"Prediction\"]) == 1][\"Team\"].values\n",
        "\n",
        "        # Printing the teams with poor form\n",
        "        against_team = team_predictions[le.transform(team_predictions[\"Prediction\"]) == 0][\"Team\"].values\n",
        "\n",
        "        # Printing the teams that can potentially win any match\n",
        "        any_win = team_predictions[le.transform(team_predictions[\"Prediction\"]) == 2][\"Team\"].values\n",
        "\n",
        "        return for_team, against_team, any_win\n",
        "\n",
        "    except Exception as e:\n",
        "        print(f\"Error: {e}\")\n",
        "        return None\n",
        "# In form team, Teams to bet against"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zWETrZn0gpOM",
        "outputId": "de144e23-ce83-4b0b-9ada-00cbe0a160b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Al Zoma Khartoum' 'Stoke City U21' 'Águilas Doradas' 'Puerto Montt'\n",
            " 'Yokohama' 'Shenzhen' 'Al Rabta Kosti' 'Kuching FA' 'Melbourne Victory'\n",
            " 'América Mineiro' 'Curicó Unido' 'Aswan' 'Inter Miami' 'Haras El Hodood'\n",
            " 'IFK Göteborg' 'Ghazl El Mehalla' 'Sudeva' 'Kelantan United' 'NEROCA'\n",
            " 'AlbinoLeffe' 'Qingdao Hainiu' 'Arema' 'Shonan Bellmare' 'Macarthur'\n",
            " 'Sangiuliano City' 'Guaireña' 'Al Ahly Shendi' 'Arsenal' 'Vålerenga'\n",
            " 'Resistencia' 'Kelantan' 'HB Chelghoum Laïd' 'HK U23'\n",
            " 'Persiba Balikpapan' 'Difaâ El Jadida' 'Sham Shui Po' 'Perak' 'Copiapó'\n",
            " 'Kashiwa Reysol' 'Kenkre' 'Persebaya Surabaya' 'Black Rhinos'\n",
            " 'NorthEast United' 'Stabæk' 'Bhayangkara' 'HamKam' 'Persikabo 1973'\n",
            " 'Newcastle Jets' 'Tacuary' 'Pulau Pinang' 'Academia Cantolao'\n",
            " 'Unión Comercio']\n"
          ]
        }
      ],
      "source": [
        "\n",
        "for_team, against_team, any_win = prediction()\n",
        "print(against_team)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "id": "JClSjEYH0Sj7"
      },
      "outputs": [],
      "source": [
        "from datetime import datetime, timedelta\n",
        "\n",
        "# Getting the fixtures of the already predicted teams\n",
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "from datetime import datetime, timedelta\n",
        "import numpy as np\n",
        "\n",
        "def get_fixtures():\n",
        "    for_team, against_team, any_win = prediction()\n",
        "    start_date = datetime.today() + timedelta(days=1)\n",
        "    end_date = start_date + timedelta(days=2)\n",
        "    delta = timedelta(days=1)\n",
        "    match_fix = []\n",
        "\n",
        "    while start_date <= end_date:\n",
        "        date_str = start_date.strftime('%d-%B-%Y')\n",
        "        url = f'https://www.skysports.com/football/fixtures-results/{date_str}'\n",
        "        response = requests.get(url)\n",
        "        soup = BeautifulSoup(response.content, 'html.parser')\n",
        "        fixtures = soup.find_all('div', class_='fixres__item')\n",
        "        for fixture in fixtures:\n",
        "            league = fixture.find_previous_sibling('h5').text.strip()\n",
        "            team_1 = fixture.find('span', class_='swap-text__target').text.strip()\n",
        "            team_2 = fixture.find_all('span', class_='swap-text__target')[1].text.strip()\n",
        "            time = fixture.find('span', class_='matches__date').text.strip()\n",
        "            match_fix.append(f'{team_1} vs {team_2}')\n",
        "\n",
        "        start_date += delta\n",
        "\n",
        "    match_fix = np.array(match_fix)\n",
        "    selection_set = np.array([line.strip() for line in for_team])\n",
        "    compiled_for = np.array([item for item in match_fix if np.any(np.isin(item.split(' vs '), selection_set))] )\n",
        "\n",
        "    selection_set_against = np.array([line.strip() for line in against_team])\n",
        "    compiled_against = np.array([item for item in match_fix if np.any(np.isin(item.split(' vs '), selection_set_against))])\n",
        "\n",
        "    selection_set_any = np.array([line.strip() for line in any_win])\n",
        "    compiled_any = np.array([item for item in match_fix if np.any(np.isin(item.split(' vs '), selection_set_any))])\n",
        "\n",
        "    return compiled_for, compiled_against, compiled_any\n",
        "\n",
        "    \"\"\"except Exception as e:\n",
        "        print(f\"Error: {e}\")\n",
        "        return None \"\"\"\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "152kjqHh1OJK",
        "outputId": "67697a06-d149-4305-bf07-932bbcb12de4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['KI Klaksvík vs Molde' 'Hangzhou Greentown vs Nantong Zhiyun'\n",
            " 'AC Milan vs Trento' 'Shanghai Shenhua vs Shenzen'\n",
            " 'Sabah vs Partizan Belgrade' 'Rosenborg vs Hearts']\n",
            "[]\n",
            "[]\n"
          ]
        }
      ],
      "source": [
        "compiled_for, compiled_against, compiled_any = get_fixtures()\n",
        "print(compiled_for)\n",
        "print(compiled_against)\n",
        "print(compiled_any)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xgxXwjyfSe0V",
        "outputId": "4436e620-6fd0-4116-bee4-3b785a2a785b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[['Hangzhou Greentown', 'Nantong Zhiyun'], ['KI Klaksvík', 'Molde'], ['Sabah', 'Partizan Belgrade'], ['AC Milan', 'Trento'], ['Rosenborg', 'Hearts'], ['Shanghai Shenhua', 'Shenzen']]\n",
            "[]\n",
            "[]\n"
          ]
        }
      ],
      "source": [
        "compiled_for, compiled_against, compiled_any = get_fixtures()\n",
        "compiled_for = {match for match in compiled_for if 'Ladies' not in match and 'Women' not in match}\n",
        "compiled_against = {match for match in compiled_against if 'Ladies' not in match and 'Women' not in match}\n",
        "compiled_any = {match for match in compiled_any if 'Ladies' not in match and 'Women' not in match}\n",
        "\n",
        "compiled_for = [[s.strip() for s in item.split('vs')] for item in compiled_for]\n",
        "compiled_against = [[s.strip() for s in item.split('vs')] for item in compiled_against]\n",
        "compiled_any = [[s.strip() for s in item.split('vs')] for item in compiled_any]\n",
        "\n",
        "print(compiled_for)\n",
        "print(compiled_against)\n",
        "print(compiled_any)\n",
        "# weekly Prediction"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['GF'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GfZ8M35Wg5In",
        "outputId": "09ba16a8-7b82-4583-fce1-c5ac5428b817"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1      39\n",
            "4      36\n",
            "6      32\n",
            "7      38\n",
            "8      35\n",
            "       ..\n",
            "455    17\n",
            "457    18\n",
            "461    14\n",
            "463    12\n",
            "467     9\n",
            "Name: GF, Length: 244, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def high_gf_ga():\n",
        "    high_scoring_teams = []\n",
        "    high_conceding_team = []\n",
        "\n",
        "    df['Average_GF_per_Match'] = df['GF'] / df['Played']\n",
        "    df['Average_GA_per_Match'] = df['GA'] / df['Played']\n",
        "    mean_avg_goal_per_match = df['Average_GF_per_Match'].mean()\n",
        "    std_deviation_avg_goal_per_match = df['Average_GF_per_Match'].std()\n",
        "\n",
        "    mean_avg_goal_against_per_match = df['Average_GA_per_Match'].mean()\n",
        "    std_deviation_avg_goal_against_per_match = df['Average_GA_per_Match'].std()\n",
        "\n",
        "    threshold_high_goal_scoring = mean_avg_goal_per_match + std_deviation_avg_goal_per_match\n",
        "    threshold_high_goal_conceding = mean_avg_goal_against_per_match + std_deviation_avg_goal_against_per_match\n",
        "\n",
        "    high_scoring_teams = df[df['Average_GF_per_Match'] > threshold_high_goal_scoring]['Team'].tolist()\n",
        "    high_conceding_teams = df[df['Average_GA_per_Match'] > threshold_high_goal_conceding]['Team'].tolist()\n",
        "\n",
        "    return high_scoring_teams, high_conceding_teams\n",
        "\n",
        "# High Scoring Teams / High conceding"
      ],
      "metadata": {
        "id": "3h5VtrWvgrWy"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "high_scoring_teams, high = high_gf_ga()\n",
        "print(high_scoring_teams)\n",
        "print(high)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tvGhB-AtiS4A",
        "outputId": "0e303297-64e9-49dc-931c-ecf5f220036e"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['River Plate', 'Melbourne City', 'Central Coast Mariners', 'Adelaide United', 'Botafogo', 'Cobresal', 'Shanghai Port', 'Southampton U21', 'Nottingham Forest U21', 'Aston Villa U21', 'Norwich City U21', 'Middlesbrough U21', 'Lee Man', 'BC Rangers', 'Goa', 'Punjab FC', 'Sreenidi Deccan', 'Borneo', 'Madura United', 'Júbilo Iwata', 'Shimizu S-Pulse', 'Consadole Sapporo', \"Johor Darul Ta'zim\", 'Selangor', 'Kedah', 'Sabah', 'Kuala Lumpur City', 'Bodø / Glimt', 'Viking', 'Molde', 'Lillestrøm', 'Cerro Porteño', 'Alianza Lima', 'Sporting Cristal', 'Al Hilal Omdurman', 'Simba', 'Azam', 'St. Louis City']\n",
            "['HB Chelghoum Laïd', 'Macarthur', 'América Mineiro', 'Shenzhen', 'Águilas Doradas', 'Norwich City U21', 'Middlesbrough U21', 'Stoke City U21', 'Sham Shui Po', 'HK U23', 'NorthEast United', 'Sudeva', 'Persikabo 1973', 'Persib', 'Persis Solo', 'Bhayangkara', 'Arema', 'Consadole Sapporo', 'Yokohama', 'Shonan Bellmare', 'Perak', 'Kelantan United', 'Kuching FA', 'Kelantan', 'HamKam', 'Unión Comercio', 'Academia Cantolao']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def win_fav():\n",
        "    MIN_GOAL_DIFFERENCE = 2\n",
        "    MIN_POINTS = 14\n",
        "    MAX_GOAL_DIFFERENCE = -1\n",
        "    MAX_POINTS = 13\n",
        "\n",
        "    pick_for = []\n",
        "    pick_against = []\n",
        "\n",
        "    # Extract team data for compiled_against fixtures\n",
        "    comp_against = [row for pair in compiled_against for item in pair for row in data if item in row and len(row) == 26]\n",
        "\n",
        "    # Extract team data for compiled_for fixtures\n",
        "    comp_for = [row for pair in compiled_for for item in pair for row in data if item in row and len(row) == 26]\n",
        "\n",
        "    # Identify pick_against teams based on conditions\n",
        "    for team_data in comp_against:\n",
        "        points = team_data[-1]\n",
        "        goal_difference = team_data[15]\n",
        "\n",
        "        if points >= MIN_POINTS and goal_difference >= MIN_GOAL_DIFFERENCE:\n",
        "            pick_against.append(team_data[0])\n",
        "        elif points >= 2 and team_data[2] >= MIN_POINTS:\n",
        "            pick_against.append(team_data[13])\n",
        "\n",
        "    # Identify pick_for teams based on conditions\n",
        "    for team_data in comp_for:\n",
        "        points = team_data[-1]\n",
        "        goal_difference = team_data[15]\n",
        "\n",
        "        if points <= MAX_POINTS and goal_difference <= MAX_GOAL_DIFFERENCE:\n",
        "            pick_for.append(team_data[0])\n",
        "        elif points <= -1 and team_data[2] <= MAX_POINTS:\n",
        "            pick_for.append(team_data[13])\n",
        "\n",
        "    return pick_for, pick_against\n",
        "\n"
      ],
      "metadata": {
        "id": "cstv6iUvAnUH"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pick_for, pick_against = win_fav()\n",
        "print(pick_for)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u-7nrqWZBxxS",
        "outputId": "3953db4d-e2d0-47b8-95a1-c3058cb35f66"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[]\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOBX/Yny1pYu/tXOJ24aBoQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}